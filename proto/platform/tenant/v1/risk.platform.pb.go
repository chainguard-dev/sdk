// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: risk.platform.proto

package v1

import (
	_ "chainguard.dev/sdk/proto/annotations"
	v1 "chainguard.dev/sdk/proto/platform/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Risk_MissingData_Type int32

const (
	Risk_MissingData_UNKNOWN   Risk_MissingData_Type = 0
	Risk_MissingData_SIGNATURE Risk_MissingData_Type = 1
	Risk_MissingData_SBOM      Risk_MissingData_Type = 2
	Risk_MissingData_POLICY    Risk_MissingData_Type = 3
)

// Enum value maps for Risk_MissingData_Type.
var (
	Risk_MissingData_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "SIGNATURE",
		2: "SBOM",
		3: "POLICY",
	}
	Risk_MissingData_Type_value = map[string]int32{
		"UNKNOWN":   0,
		"SIGNATURE": 1,
		"SBOM":      2,
		"POLICY":    3,
	}
)

func (x Risk_MissingData_Type) Enum() *Risk_MissingData_Type {
	p := new(Risk_MissingData_Type)
	*p = x
	return p
}

func (x Risk_MissingData_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Risk_MissingData_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_risk_platform_proto_enumTypes[0].Descriptor()
}

func (Risk_MissingData_Type) Type() protoreflect.EnumType {
	return &file_risk_platform_proto_enumTypes[0]
}

func (x Risk_MissingData_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Risk_MissingData_Type.Descriptor instead.
func (Risk_MissingData_Type) EnumDescriptor() ([]byte, []int) {
	return file_risk_platform_proto_rawDescGZIP(), []int{2, 1, 0}
}

type Risk_Vulnerability_Severity int32

const (
	Risk_Vulnerability_UNKNOWN  Risk_Vulnerability_Severity = 0
	Risk_Vulnerability_LOW      Risk_Vulnerability_Severity = 1
	Risk_Vulnerability_MEDIUM   Risk_Vulnerability_Severity = 2
	Risk_Vulnerability_HIGH     Risk_Vulnerability_Severity = 3
	Risk_Vulnerability_CRITICAL Risk_Vulnerability_Severity = 4
)

// Enum value maps for Risk_Vulnerability_Severity.
var (
	Risk_Vulnerability_Severity_name = map[int32]string{
		0: "UNKNOWN",
		1: "LOW",
		2: "MEDIUM",
		3: "HIGH",
		4: "CRITICAL",
	}
	Risk_Vulnerability_Severity_value = map[string]int32{
		"UNKNOWN":  0,
		"LOW":      1,
		"MEDIUM":   2,
		"HIGH":     3,
		"CRITICAL": 4,
	}
)

func (x Risk_Vulnerability_Severity) Enum() *Risk_Vulnerability_Severity {
	p := new(Risk_Vulnerability_Severity)
	*p = x
	return p
}

func (x Risk_Vulnerability_Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Risk_Vulnerability_Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_risk_platform_proto_enumTypes[1].Descriptor()
}

func (Risk_Vulnerability_Severity) Type() protoreflect.EnumType {
	return &file_risk_platform_proto_enumTypes[1]
}

func (x Risk_Vulnerability_Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Risk_Vulnerability_Severity.Descriptor instead.
func (Risk_Vulnerability_Severity) EnumDescriptor() ([]byte, []int) {
	return file_risk_platform_proto_rawDescGZIP(), []int{2, 2, 0}
}

type RiskFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id is the exact UID of the record.
	Id   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Uidp *v1.UIDPFilter `protobuf:"bytes,2,opt,name=uidp,proto3" json:"uidp,omitempty"`
}

func (x *RiskFilter) Reset() {
	*x = RiskFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_risk_platform_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskFilter) ProtoMessage() {}

func (x *RiskFilter) ProtoReflect() protoreflect.Message {
	mi := &file_risk_platform_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskFilter.ProtoReflect.Descriptor instead.
func (*RiskFilter) Descriptor() ([]byte, []int) {
	return file_risk_platform_proto_rawDescGZIP(), []int{0}
}

func (x *RiskFilter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RiskFilter) GetUidp() *v1.UIDPFilter {
	if x != nil {
		return x.Uidp
	}
	return nil
}

type RiskList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Risk `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RiskList) Reset() {
	*x = RiskList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_risk_platform_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskList) ProtoMessage() {}

func (x *RiskList) ProtoReflect() protoreflect.Message {
	mi := &file_risk_platform_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskList.ProtoReflect.Descriptor instead.
func (*RiskList) Descriptor() ([]byte, []int) {
	return file_risk_platform_proto_rawDescGZIP(), []int{1}
}

func (x *RiskList) GetItems() []*Risk {
	if x != nil {
		return x.Items
	}
	return nil
}

type Risk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Risk ID (UIDP resource + unique ID)
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Grouping identifier to associate Risks in the same UIDP
	// to each other.
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// List of UIDPs that were used to determine this Risk.
	Inputs []string `protobuf:"bytes,3,rep,name=inputs,proto3" json:"inputs,omitempty"`
	// What kind of risk is this? Lack of signatures, vulnerability, SBOM quality, etc.
	Details *Risk_Details `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
	// Output only. Free form text describing this Risk.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Output only. Chainguard EDU link for more details on this Risk.
	DocumentationUrl string `protobuf:"bytes,6,opt,name=documentation_url,json=documentationUrl,proto3" json:"documentation_url,omitempty"`
	// Optional. Chainguard's recommendation(s) for how to resolve this Risk.
	Recommendations []*Recommendation `protobuf:"bytes,7,rep,name=recommendations,proto3" json:"recommendations,omitempty"`
	// Output only. When Enforce last saw this Risk.
	LastSeen *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
}

func (x *Risk) Reset() {
	*x = Risk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_risk_platform_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Risk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Risk) ProtoMessage() {}

func (x *Risk) ProtoReflect() protoreflect.Message {
	mi := &file_risk_platform_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Risk.ProtoReflect.Descriptor instead.
func (*Risk) Descriptor() ([]byte, []int) {
	return file_risk_platform_proto_rawDescGZIP(), []int{2}
}

func (x *Risk) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Risk) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Risk) GetInputs() []string {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *Risk) GetDetails() *Risk_Details {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Risk) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Risk) GetDocumentationUrl() string {
	if x != nil {
		return x.DocumentationUrl
	}
	return ""
}

func (x *Risk) GetRecommendations() []*Recommendation {
	if x != nil {
		return x.Recommendations
	}
	return nil
}

func (x *Risk) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

type Recommendation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Classification of what kind of remediation this is, e.g.:
	// upgrade, replace, etc.
	//
	// Types that are assignable to Action:
	//
	//	*Recommendation_Replace
	Action isRecommendation_Action `protobuf_oneof:"action"`
	// Output only. Free form text describing how this can be resolved.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Output only. Chainguard EDU link for more details on this Recommendation.
	DocumentationUrl string `protobuf:"bytes,4,opt,name=documentation_url,json=documentationUrl,proto3" json:"documentation_url,omitempty"`
}

func (x *Recommendation) Reset() {
	*x = Recommendation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_risk_platform_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recommendation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recommendation) ProtoMessage() {}

func (x *Recommendation) ProtoReflect() protoreflect.Message {
	mi := &file_risk_platform_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recommendation.ProtoReflect.Descriptor instead.
func (*Recommendation) Descriptor() ([]byte, []int) {
	return file_risk_platform_proto_rawDescGZIP(), []int{3}
}

func (m *Recommendation) GetAction() isRecommendation_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *Recommendation) GetReplace() *Recommendation_ReplaceArtifact {
	if x, ok := x.GetAction().(*Recommendation_Replace); ok {
		return x.Replace
	}
	return nil
}

func (x *Recommendation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Recommendation) GetDocumentationUrl() string {
	if x != nil {
		return x.DocumentationUrl
	}
	return ""
}

type isRecommendation_Action interface {
	isRecommendation_Action()
}

type Recommendation_Replace struct {
	Replace *Recommendation_ReplaceArtifact `protobuf:"bytes,1,opt,name=replace,proto3,oneof"`
}

func (*Recommendation_Replace) isRecommendation_Action() {}

type Risk_Details struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*Risk_Details_MissingData
	Data isRisk_Details_Data `protobuf_oneof:"data"`
}

func (x *Risk_Details) Reset() {
	*x = Risk_Details{}
	if protoimpl.UnsafeEnabled {
		mi := &file_risk_platform_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Risk_Details) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Risk_Details) ProtoMessage() {}

func (x *Risk_Details) ProtoReflect() protoreflect.Message {
	mi := &file_risk_platform_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Risk_Details.ProtoReflect.Descriptor instead.
func (*Risk_Details) Descriptor() ([]byte, []int) {
	return file_risk_platform_proto_rawDescGZIP(), []int{2, 0}
}

func (m *Risk_Details) GetData() isRisk_Details_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Risk_Details) GetMissingData() *Risk_MissingData {
	if x, ok := x.GetData().(*Risk_Details_MissingData); ok {
		return x.MissingData
	}
	return nil
}

type isRisk_Details_Data interface {
	isRisk_Details_Data()
}

type Risk_Details_MissingData struct {
	MissingData *Risk_MissingData `protobuf:"bytes,1,opt,name=missing_data,json=missingData,proto3,oneof"`
}

func (*Risk_Details_MissingData) isRisk_Details_Data() {}

type Risk_MissingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// What kind of data is missing (e.g. signature, sbom, policy, etc.)
	Type Risk_MissingData_Type `protobuf:"varint,1,opt,name=type,proto3,enum=chainguard.platform.tenant.Risk_MissingData_Type" json:"type,omitempty"`
}

func (x *Risk_MissingData) Reset() {
	*x = Risk_MissingData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_risk_platform_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Risk_MissingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Risk_MissingData) ProtoMessage() {}

func (x *Risk_MissingData) ProtoReflect() protoreflect.Message {
	mi := &file_risk_platform_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Risk_MissingData.ProtoReflect.Descriptor instead.
func (*Risk_MissingData) Descriptor() ([]byte, []int) {
	return file_risk_platform_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Risk_MissingData) GetType() Risk_MissingData_Type {
	if x != nil {
		return x.Type
	}
	return Risk_MissingData_UNKNOWN
}

type Risk_Vulnerability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Severity Risk_Vulnerability_Severity `protobuf:"varint,5,opt,name=severity,proto3,enum=chainguard.platform.tenant.Risk_Vulnerability_Severity" json:"severity,omitempty"`
	// External identifier of the source of the vuln - e.g. CVE ID.
	Source string `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *Risk_Vulnerability) Reset() {
	*x = Risk_Vulnerability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_risk_platform_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Risk_Vulnerability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Risk_Vulnerability) ProtoMessage() {}

func (x *Risk_Vulnerability) ProtoReflect() protoreflect.Message {
	mi := &file_risk_platform_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Risk_Vulnerability.ProtoReflect.Descriptor instead.
func (*Risk_Vulnerability) Descriptor() ([]byte, []int) {
	return file_risk_platform_proto_rawDescGZIP(), []int{2, 2}
}

func (x *Risk_Vulnerability) GetSeverity() Risk_Vulnerability_Severity {
	if x != nil {
		return x.Severity
	}
	return Risk_Vulnerability_UNKNOWN
}

func (x *Risk_Vulnerability) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type Recommendation_ReplaceArtifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// Target artifact that may be able to resolve this Risk.
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *Recommendation_ReplaceArtifact) Reset() {
	*x = Recommendation_ReplaceArtifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_risk_platform_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recommendation_ReplaceArtifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recommendation_ReplaceArtifact) ProtoMessage() {}

func (x *Recommendation_ReplaceArtifact) ProtoReflect() protoreflect.Message {
	mi := &file_risk_platform_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recommendation_ReplaceArtifact.ProtoReflect.Descriptor instead.
func (*Recommendation_ReplaceArtifact) Descriptor() ([]byte, []int) {
	return file_risk_platform_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Recommendation_ReplaceArtifact) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Recommendation_ReplaceArtifact) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

var File_risk_platform_proto protoreflect.FileDescriptor

var file_risk_platform_proto_rawDesc = []byte{
	0x0a, 0x13, 0x72, 0x69, 0x73, 0x6b, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x16, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x69, 0x64,
	0x70, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x58, 0x0a, 0x0a, 0x52, 0x69, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a,
	0x0a, 0x04, 0x75, 0x69, 0x64, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x49, 0x44, 0x50, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x75, 0x69, 0x64, 0x70, 0x22, 0x42, 0x0a, 0x08, 0x52, 0x69,
	0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xa7,
	0x06, 0x0a, 0x04, 0x52, 0x69, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x2e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2b, 0x0a, 0x11, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x54, 0x0a,
	0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x1a, 0x64, 0x0a, 0x07,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x51, 0x0a, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x2e,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0b, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x8e, 0x01, 0x0a, 0x0b, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x45, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x69,
	0x73, 0x6b, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x38, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x53, 0x42, 0x4f, 0x4d, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x4f, 0x4c, 0x49, 0x43,
	0x59, 0x10, 0x03, 0x1a, 0xc2, 0x01, 0x0a, 0x0d, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x53, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0x44, 0x0a, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4c,
	0x4f, 0x57, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x02,
	0x12, 0x08, 0x0a, 0x04, 0x48, 0x49, 0x47, 0x48, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52,
	0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x04, 0x22, 0xf8, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x07, 0x72,
	0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x1a, 0x35, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x32, 0x85, 0x01, 0x0a, 0x05, 0x52, 0x69, 0x73, 0x6b, 0x73, 0x12, 0x7c, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x24, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x69, 0x73, 0x6b, 0x73, 0x8a, 0xaf, 0xa8,
	0xd2, 0x05, 0x08, 0x12, 0x06, 0x0a, 0x02, 0x80, 0x05, 0x10, 0x01, 0x42, 0x69, 0x0a, 0x25, 0x64,
	0x65, 0x76, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x42, 0x11, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x69,
	0x73, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2b, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_risk_platform_proto_rawDescOnce sync.Once
	file_risk_platform_proto_rawDescData = file_risk_platform_proto_rawDesc
)

func file_risk_platform_proto_rawDescGZIP() []byte {
	file_risk_platform_proto_rawDescOnce.Do(func() {
		file_risk_platform_proto_rawDescData = protoimpl.X.CompressGZIP(file_risk_platform_proto_rawDescData)
	})
	return file_risk_platform_proto_rawDescData
}

var file_risk_platform_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_risk_platform_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_risk_platform_proto_goTypes = []interface{}{
	(Risk_MissingData_Type)(0),             // 0: chainguard.platform.tenant.Risk.MissingData.Type
	(Risk_Vulnerability_Severity)(0),       // 1: chainguard.platform.tenant.Risk.Vulnerability.Severity
	(*RiskFilter)(nil),                     // 2: chainguard.platform.tenant.RiskFilter
	(*RiskList)(nil),                       // 3: chainguard.platform.tenant.RiskList
	(*Risk)(nil),                           // 4: chainguard.platform.tenant.Risk
	(*Recommendation)(nil),                 // 5: chainguard.platform.tenant.Recommendation
	(*Risk_Details)(nil),                   // 6: chainguard.platform.tenant.Risk.Details
	(*Risk_MissingData)(nil),               // 7: chainguard.platform.tenant.Risk.MissingData
	(*Risk_Vulnerability)(nil),             // 8: chainguard.platform.tenant.Risk.Vulnerability
	(*Recommendation_ReplaceArtifact)(nil), // 9: chainguard.platform.tenant.Recommendation.ReplaceArtifact
	(*v1.UIDPFilter)(nil),                  // 10: chainguard.platform.common.UIDPFilter
	(*timestamppb.Timestamp)(nil),          // 11: google.protobuf.Timestamp
}
var file_risk_platform_proto_depIdxs = []int32{
	10, // 0: chainguard.platform.tenant.RiskFilter.uidp:type_name -> chainguard.platform.common.UIDPFilter
	4,  // 1: chainguard.platform.tenant.RiskList.items:type_name -> chainguard.platform.tenant.Risk
	6,  // 2: chainguard.platform.tenant.Risk.details:type_name -> chainguard.platform.tenant.Risk.Details
	5,  // 3: chainguard.platform.tenant.Risk.recommendations:type_name -> chainguard.platform.tenant.Recommendation
	11, // 4: chainguard.platform.tenant.Risk.last_seen:type_name -> google.protobuf.Timestamp
	9,  // 5: chainguard.platform.tenant.Recommendation.replace:type_name -> chainguard.platform.tenant.Recommendation.ReplaceArtifact
	7,  // 6: chainguard.platform.tenant.Risk.Details.missing_data:type_name -> chainguard.platform.tenant.Risk.MissingData
	0,  // 7: chainguard.platform.tenant.Risk.MissingData.type:type_name -> chainguard.platform.tenant.Risk.MissingData.Type
	1,  // 8: chainguard.platform.tenant.Risk.Vulnerability.severity:type_name -> chainguard.platform.tenant.Risk.Vulnerability.Severity
	2,  // 9: chainguard.platform.tenant.Risks.List:input_type -> chainguard.platform.tenant.RiskFilter
	3,  // 10: chainguard.platform.tenant.Risks.List:output_type -> chainguard.platform.tenant.RiskList
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_risk_platform_proto_init() }
func file_risk_platform_proto_init() {
	if File_risk_platform_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_risk_platform_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_risk_platform_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_risk_platform_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Risk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_risk_platform_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recommendation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_risk_platform_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Risk_Details); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_risk_platform_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Risk_MissingData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_risk_platform_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Risk_Vulnerability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_risk_platform_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recommendation_ReplaceArtifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_risk_platform_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Recommendation_Replace)(nil),
	}
	file_risk_platform_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Risk_Details_MissingData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_risk_platform_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_risk_platform_proto_goTypes,
		DependencyIndexes: file_risk_platform_proto_depIdxs,
		EnumInfos:         file_risk_platform_proto_enumTypes,
		MessageInfos:      file_risk_platform_proto_msgTypes,
	}.Build()
	File_risk_platform_proto = out.File
	file_risk_platform_proto_rawDesc = nil
	file_risk_platform_proto_goTypes = nil
	file_risk_platform_proto_depIdxs = nil
}
