syntax = "proto3";

option go_package = "chainguard.dev/sdk/proto/platform/iam/v1";
option java_multiple_files = true;
option java_package = "dev.chainguard.sdk.platform.iam.v1";
option java_outer_classname = "PlatformIAMRoleBindingProto";

package chainguard.platform.iam;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "annotations/auth.proto";
import "annotations/events.proto";
import "platform/common/v1/uidp.platform.proto";
import "group.platform.proto";
import "role.platform.proto";

service RoleBindings {
  rpc Create(CreateRoleBindingRequest) returns (RoleBinding) {
    option (google.api.http) = {
      post: "/iam/v1/rolebindings/{parent=**}"
      body: "role_binding"
    };
    option (chainguard.annotations.iam) = {
      enabled: {
        capabilities: [CAP_IAM_ROLE_BINDINGS_CREATE]
      }
    };
    option (chainguard.annotations.events) = {
      type: "dev.chainguard.api.iam.rolebindings.created.v1"
      extensions: ["group"]
      audience: CUSTOMER
    };
  }

  rpc Update(RoleBinding) returns (RoleBinding) {
    option (google.api.http) = {
      put: "/iam/v1/rolebindings/{id=**}"
      body: "*"
    };
    option (chainguard.annotations.iam) = {
      enabled: {
        capabilities: [CAP_IAM_ROLE_BINDINGS_UPDATE]
      }
    };
    option (chainguard.annotations.events) = {
      type: "dev.chainguard.api.iam.rolebindings.updated.v1"
      extensions: ["group"]
      audience: CUSTOMER
    };
  }

  rpc List(RoleBindingFilter) returns (RoleBindingList) {
    option (google.api.http) = {
      get: "/iam/v1/rolebindings"
    };
    option (chainguard.annotations.iam) = {
      enabled: {
        capabilities: [CAP_IAM_ROLE_BINDINGS_LIST]
        unscoped: true
      }
    };
  }

  rpc Delete(DeleteRoleBindingRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/iam/v1/rolebindings/{id=**}"
    };
    option (chainguard.annotations.iam) = {
      enabled: {
        capabilities: [CAP_IAM_ROLE_BINDINGS_DELETE]
      }
    };
    option (chainguard.annotations.events) = {
      type: "dev.chainguard.api.iam.rolebindings.deleted.v1"
      extensions: ["group"]
      audience: CUSTOMER
    };
  }
}

message RoleBinding {
  // id, the UID of this role binding.
  string id = 1 [(chainguard.annotations.iam_scope) = true];
  // identity, UID of the Identity to bind.
  string identity = 2;
  // group, UIDP of the group to bind. This field is ignored and will be removed
  // in the future. The group is always the parent of the UIDP.
  string group = 3 [deprecated = true];
  // role, UIDP of the Role to bind
  string role = 4;
}

message RoleBindingList {
  message Binding {
    // id, the UID of this role binding.
    string id = 1;
    // group of the bound role.
    chainguard.platform.iam.Group group = 2;
    // identity, UID of the Identity bound.
    string identity = 3;
    // role of the bound identity.
    chainguard.platform.iam.Role role = 4;
    // email of the bound identity.
    string email = 5;
    // ClaimMatch issuer of the bound identity.
    string claim_match_issuer = 6;
    // ClaimMatch subject of the bound identity.
    string claim_match_subject = 7;
  }
  repeated Binding items = 1;
}

message RoleBindingFilter {
  // id is the exact UID of the record.
  string id = 1;
  // uidp filters records based on their position in the group hierarchy.
  chainguard.platform.common.UIDPFilter uidp = 2;
}

message CreateRoleBindingRequest {
  // parent, The Group UIDP path under which the new RoleBinding resides.
  string parent = 1 [(chainguard.annotations.iam_scope) = true];
  // RoleBinding to create.
  RoleBinding role_binding = 2;
}

message DeleteRoleBindingRequest {
  // id is the exact UID of the record.
  string id = 1 [(chainguard.annotations.iam_scope) = true];
}
