// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: account_associations.platform.proto

package v1

import (
	_ "chainguard.dev/sdk/proto/annotations"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccountAssociationsStatus_State int32

const (
	AccountAssociationsStatus_UNKNOWN  AccountAssociationsStatus_State = 0
	AccountAssociationsStatus_Ready    AccountAssociationsStatus_State = 1
	AccountAssociationsStatus_NotReady AccountAssociationsStatus_State = 2
)

// Enum value maps for AccountAssociationsStatus_State.
var (
	AccountAssociationsStatus_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "Ready",
		2: "NotReady",
	}
	AccountAssociationsStatus_State_value = map[string]int32{
		"UNKNOWN":  0,
		"Ready":    1,
		"NotReady": 2,
	}
)

func (x AccountAssociationsStatus_State) Enum() *AccountAssociationsStatus_State {
	p := new(AccountAssociationsStatus_State)
	*p = x
	return p
}

func (x AccountAssociationsStatus_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountAssociationsStatus_State) Descriptor() protoreflect.EnumDescriptor {
	return file_account_associations_platform_proto_enumTypes[0].Descriptor()
}

func (AccountAssociationsStatus_State) Type() protoreflect.EnumType {
	return &file_account_associations_platform_proto_enumTypes[0]
}

func (x AccountAssociationsStatus_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountAssociationsStatus_State.Descriptor instead.
func (AccountAssociationsStatus_State) EnumDescriptor() ([]byte, []int) {
	return file_account_associations_platform_proto_rawDescGZIP(), []int{4, 0}
}

type AccountAssociationsCheckRequest_AccountType int32

const (
	AccountAssociationsCheckRequest_UNKNOWN AccountAssociationsCheckRequest_AccountType = 0
	AccountAssociationsCheckRequest_GOOGLE  AccountAssociationsCheckRequest_AccountType = 1
	AccountAssociationsCheckRequest_AMAZON  AccountAssociationsCheckRequest_AccountType = 2
)

// Enum value maps for AccountAssociationsCheckRequest_AccountType.
var (
	AccountAssociationsCheckRequest_AccountType_name = map[int32]string{
		0: "UNKNOWN",
		1: "GOOGLE",
		2: "AMAZON",
	}
	AccountAssociationsCheckRequest_AccountType_value = map[string]int32{
		"UNKNOWN": 0,
		"GOOGLE":  1,
		"AMAZON":  2,
	}
)

func (x AccountAssociationsCheckRequest_AccountType) Enum() *AccountAssociationsCheckRequest_AccountType {
	p := new(AccountAssociationsCheckRequest_AccountType)
	*p = x
	return p
}

func (x AccountAssociationsCheckRequest_AccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountAssociationsCheckRequest_AccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_account_associations_platform_proto_enumTypes[1].Descriptor()
}

func (AccountAssociationsCheckRequest_AccountType) Type() protoreflect.EnumType {
	return &file_account_associations_platform_proto_enumTypes[1]
}

func (x AccountAssociationsCheckRequest_AccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountAssociationsCheckRequest_AccountType.Descriptor instead.
func (AccountAssociationsCheckRequest_AccountType) EnumDescriptor() ([]byte, []int) {
	return file_account_associations_platform_proto_rawDescGZIP(), []int{5, 0}
}

type AccountAssociations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// group is the group with which this account information is associated.
	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	// amazon holds information associating an Amazon account with the group.
	Amazon *AccountAssociations_Amazon `protobuf:"bytes,2,opt,name=amazon,proto3" json:"amazon,omitempty"`
	// google holds information associating a Google project with the group.
	Google *AccountAssociations_Google `protobuf:"bytes,3,opt,name=google,proto3" json:"google,omitempty"`
	// github holds information associating a GitHub installation with the group.
	// Note: this AccountAssociation type is EXPERIMENTAL.
	Github     *AccountAssociations_GitHubInstallation `protobuf:"bytes,6,opt,name=github,proto3" json:"github,omitempty"`
	Chainguard *AccountAssociations_Chainguard         `protobuf:"bytes,7,opt,name=chainguard,proto3" json:"chainguard,omitempty"`
	// name of the association.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// a short description of this association.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *AccountAssociations) Reset() {
	*x = AccountAssociations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_associations_platform_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAssociations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAssociations) ProtoMessage() {}

func (x *AccountAssociations) ProtoReflect() protoreflect.Message {
	mi := &file_account_associations_platform_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAssociations.ProtoReflect.Descriptor instead.
func (*AccountAssociations) Descriptor() ([]byte, []int) {
	return file_account_associations_platform_proto_rawDescGZIP(), []int{0}
}

func (x *AccountAssociations) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *AccountAssociations) GetAmazon() *AccountAssociations_Amazon {
	if x != nil {
		return x.Amazon
	}
	return nil
}

func (x *AccountAssociations) GetGoogle() *AccountAssociations_Google {
	if x != nil {
		return x.Google
	}
	return nil
}

func (x *AccountAssociations) GetGithub() *AccountAssociations_GitHubInstallation {
	if x != nil {
		return x.Github
	}
	return nil
}

func (x *AccountAssociations) GetChainguard() *AccountAssociations_Chainguard {
	if x != nil {
		return x.Chainguard
	}
	return nil
}

func (x *AccountAssociations) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountAssociations) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AccountAssociationsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*AccountAssociations `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AccountAssociationsList) Reset() {
	*x = AccountAssociationsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_associations_platform_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAssociationsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAssociationsList) ProtoMessage() {}

func (x *AccountAssociationsList) ProtoReflect() protoreflect.Message {
	mi := &file_account_associations_platform_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAssociationsList.ProtoReflect.Descriptor instead.
func (*AccountAssociationsList) Descriptor() ([]byte, []int) {
	return file_account_associations_platform_proto_rawDescGZIP(), []int{1}
}

func (x *AccountAssociationsList) GetItems() []*AccountAssociations {
	if x != nil {
		return x.Items
	}
	return nil
}

type AccountAssociationsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// group is the exact UIDP of the group whose associations we want to list.
	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	// name is the exact name of the association.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AccountAssociationsFilter) Reset() {
	*x = AccountAssociationsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_associations_platform_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAssociationsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAssociationsFilter) ProtoMessage() {}

func (x *AccountAssociationsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_account_associations_platform_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAssociationsFilter.ProtoReflect.Descriptor instead.
func (*AccountAssociationsFilter) Descriptor() ([]byte, []int) {
	return file_account_associations_platform_proto_rawDescGZIP(), []int{2}
}

func (x *AccountAssociationsFilter) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *AccountAssociationsFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteAccountAssociationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// group is the exact UIDP of the group whose associations we want to delete.
	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *DeleteAccountAssociationsRequest) Reset() {
	*x = DeleteAccountAssociationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_associations_platform_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountAssociationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountAssociationsRequest) ProtoMessage() {}

func (x *DeleteAccountAssociationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_associations_platform_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountAssociationsRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccountAssociationsRequest) Descriptor() ([]byte, []int) {
	return file_account_associations_platform_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteAccountAssociationsRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type AccountAssociationsStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ready   AccountAssociationsStatus_State `protobuf:"varint,1,opt,name=ready,proto3,enum=chainguard.platform.iam.AccountAssociationsStatus_State" json:"ready,omitempty"`
	Reason  string                          `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Message string                          `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AccountAssociationsStatus) Reset() {
	*x = AccountAssociationsStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_associations_platform_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAssociationsStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAssociationsStatus) ProtoMessage() {}

func (x *AccountAssociationsStatus) ProtoReflect() protoreflect.Message {
	mi := &file_account_associations_platform_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAssociationsStatus.ProtoReflect.Descriptor instead.
func (*AccountAssociationsStatus) Descriptor() ([]byte, []int) {
	return file_account_associations_platform_proto_rawDescGZIP(), []int{4}
}

func (x *AccountAssociationsStatus) GetReady() AccountAssociationsStatus_State {
	if x != nil {
		return x.Ready
	}
	return AccountAssociationsStatus_UNKNOWN
}

func (x *AccountAssociationsStatus) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AccountAssociationsStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AccountAssociationsCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// group is the exact UIDP of the group whose associations we want to check
	Group       string                                      `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	AccountType AccountAssociationsCheckRequest_AccountType `protobuf:"varint,2,opt,name=account_type,json=accountType,proto3,enum=chainguard.platform.iam.AccountAssociationsCheckRequest_AccountType" json:"account_type,omitempty"`
}

func (x *AccountAssociationsCheckRequest) Reset() {
	*x = AccountAssociationsCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_associations_platform_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAssociationsCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAssociationsCheckRequest) ProtoMessage() {}

func (x *AccountAssociationsCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_associations_platform_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAssociationsCheckRequest.ProtoReflect.Descriptor instead.
func (*AccountAssociationsCheckRequest) Descriptor() ([]byte, []int) {
	return file_account_associations_platform_proto_rawDescGZIP(), []int{5}
}

func (x *AccountAssociationsCheckRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *AccountAssociationsCheckRequest) GetAccountType() AccountAssociationsCheckRequest_AccountType {
	if x != nil {
		return x.AccountType
	}
	return AccountAssociationsCheckRequest_UNKNOWN
}

type AccountAssociations_Amazon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *AccountAssociations_Amazon) Reset() {
	*x = AccountAssociations_Amazon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_associations_platform_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAssociations_Amazon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAssociations_Amazon) ProtoMessage() {}

func (x *AccountAssociations_Amazon) ProtoReflect() protoreflect.Message {
	mi := &file_account_associations_platform_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAssociations_Amazon.ProtoReflect.Descriptor instead.
func (*AccountAssociations_Amazon) Descriptor() ([]byte, []int) {
	return file_account_associations_platform_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AccountAssociations_Amazon) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type AccountAssociations_Google struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId     string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ProjectNumber string `protobuf:"bytes,2,opt,name=project_number,json=projectNumber,proto3" json:"project_number,omitempty"`
}

func (x *AccountAssociations_Google) Reset() {
	*x = AccountAssociations_Google{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_associations_platform_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAssociations_Google) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAssociations_Google) ProtoMessage() {}

func (x *AccountAssociations_Google) ProtoReflect() protoreflect.Message {
	mi := &file_account_associations_platform_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAssociations_Google.ProtoReflect.Descriptor instead.
func (*AccountAssociations_Google) Descriptor() ([]byte, []int) {
	return file_account_associations_platform_proto_rawDescGZIP(), []int{0, 1}
}

func (x *AccountAssociations_Google) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AccountAssociations_Google) GetProjectNumber() string {
	if x != nil {
		return x.ProjectNumber
	}
	return ""
}

type AccountAssociations_GitHubInstallation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// GitHub hostname app is associated with. Output only.
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// GitHub App ID. Output only.
	AppId int64 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// GitHub App Installation ID. Takes precedence over name.
	InstallationId int64 `protobuf:"varint,3,opt,name=installation_id,json=installationId,proto3" json:"installation_id,omitempty"`
	// GitHub user/org name the installation is installed on.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AccountAssociations_GitHubInstallation) Reset() {
	*x = AccountAssociations_GitHubInstallation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_associations_platform_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAssociations_GitHubInstallation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAssociations_GitHubInstallation) ProtoMessage() {}

func (x *AccountAssociations_GitHubInstallation) ProtoReflect() protoreflect.Message {
	mi := &file_account_associations_platform_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAssociations_GitHubInstallation.ProtoReflect.Descriptor instead.
func (*AccountAssociations_GitHubInstallation) Descriptor() ([]byte, []int) {
	return file_account_associations_platform_proto_rawDescGZIP(), []int{0, 2}
}

func (x *AccountAssociations_GitHubInstallation) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *AccountAssociations_GitHubInstallation) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *AccountAssociations_GitHubInstallation) GetInstallationId() int64 {
	if x != nil {
		return x.InstallationId
	}
	return 0
}

func (x *AccountAssociations_GitHubInstallation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AccountAssociations_Chainguard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// service_bindings map from the Chainguard service principal to the
	// UIDP of the identity that service should assume. Constraints:
	// - The identity must live directly under "group",
	// - The identity must be a service_principal,
	// - The service_principal of the identity must match the key of this map.
	// Note that the key space of this must match the ServicePrincipal enum,
	// but the enum type itself cannot be used here because of:
	// https://groups.google.com/g/protobuf/c/ikeldBe60eI
	ServiceBindings map[string]string `protobuf:"bytes,1,rep,name=service_bindings,json=serviceBindings,proto3" json:"service_bindings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AccountAssociations_Chainguard) Reset() {
	*x = AccountAssociations_Chainguard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_associations_platform_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAssociations_Chainguard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAssociations_Chainguard) ProtoMessage() {}

func (x *AccountAssociations_Chainguard) ProtoReflect() protoreflect.Message {
	mi := &file_account_associations_platform_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAssociations_Chainguard.ProtoReflect.Descriptor instead.
func (*AccountAssociations_Chainguard) Descriptor() ([]byte, []int) {
	return file_account_associations_platform_proto_rawDescGZIP(), []int{0, 3}
}

func (x *AccountAssociations_Chainguard) GetServiceBindings() map[string]string {
	if x != nil {
		return x.ServiceBindings
	}
	return nil
}

var File_account_associations_platform_proto protoreflect.FileDescriptor

var file_account_associations_platform_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x18, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf3, 0x06, 0x0a, 0x13,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0x90, 0xaf, 0xa8, 0xd2, 0x05, 0x01, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x4b, 0x0a, 0x06, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x12, 0x4b,
	0x0a, 0x06, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x52, 0x06, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12, 0x57, 0x0a, 0x06, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x12, 0x57, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x22, 0x0a, 0x06, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x4e, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x7c, 0x0a, 0x12, 0x47, 0x69, 0x74, 0x48, 0x75,
	0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0xc9, 0x01, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x12, 0x77, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c,
	0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x42, 0x0a,
	0x14, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x5d, 0x0a, 0x17, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x45, 0x0a, 0x19, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0x90, 0xaf, 0xa8, 0xd2,
	0x05, 0x01, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xcc, 0x01, 0x0a, 0x19, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4e, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2d, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x6f,
	0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x10, 0x02, 0x22, 0xdc, 0x01, 0x0a, 0x1f, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0x90, 0xaf, 0xa8,
	0xd2, 0x05, 0x01, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x67, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x44, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x32, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x47, 0x4f, 0x4f, 0x47, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41,
	0x4d, 0x41, 0x5a, 0x4f, 0x4e, 0x10, 0x02, 0x32, 0xbc, 0x08, 0x0a, 0x18, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0xec, 0x01, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x2c, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x2c, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x85, 0x01, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2c, 0x22, 0x27, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x3d, 0x2a, 0x2a, 0x7d, 0x3a, 0x01, 0x2a,
	0x8a, 0xaf, 0xa8, 0xd2, 0x05, 0x06, 0x12, 0x04, 0x0a, 0x02, 0xbd, 0x05, 0xc2, 0xf0, 0x8e, 0xfc,
	0x0b, 0x41, 0x0a, 0x36, 0x64, 0x65, 0x76, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x12, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x12, 0xec, 0x01, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2c,
	0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x2c, 0x2e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x85, 0x01, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2c, 0x1a, 0x27, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x7b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x3d, 0x2a, 0x2a, 0x7d, 0x3a, 0x01, 0x2a, 0x8a,
	0xaf, 0xa8, 0xd2, 0x05, 0x06, 0x12, 0x04, 0x0a, 0x02, 0xbe, 0x05, 0xc2, 0xf0, 0x8e, 0xfc, 0x0b,
	0x41, 0x0a, 0x36, 0x64, 0x65, 0x76, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x12, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x01, 0x12, 0xa0, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x2e, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a,
	0x30, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x69, 0x61, 0x6d, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x8a, 0xaf, 0xa8, 0xd2, 0x05, 0x08, 0x12, 0x06, 0x0a,
	0x02, 0xbf, 0x05, 0x10, 0x01, 0x12, 0xe0, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x39, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x82, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x2a, 0x27, 0x2f, 0x69,
	0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x73,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x3d, 0x2a, 0x2a, 0x7d, 0x8a, 0xaf, 0xa8, 0xd2, 0x05, 0x06, 0x12, 0x04, 0x0a, 0x02, 0xc0,
	0x05, 0xc2, 0xf0, 0x8e, 0xfc, 0x0b, 0x41, 0x0a, 0x36, 0x64, 0x65, 0x76, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x12,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x12, 0xbb, 0x01, 0x0a, 0x05, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x12, 0x38, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x44, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x22, 0x2d, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x3d, 0x2a, 0x2a,
	0x7d, 0x3a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x3a, 0x01, 0x2a, 0x8a, 0xaf, 0xa8, 0xd2, 0x05, 0x06,
	0x12, 0x04, 0x0a, 0x02, 0xbf, 0x05, 0x42, 0x75, 0x0a, 0x22, 0x64, 0x65, 0x76, 0x2e, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x42, 0x23, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x41, 0x4d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x28, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e,
	0x64, 0x65, 0x76, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_account_associations_platform_proto_rawDescOnce sync.Once
	file_account_associations_platform_proto_rawDescData = file_account_associations_platform_proto_rawDesc
)

func file_account_associations_platform_proto_rawDescGZIP() []byte {
	file_account_associations_platform_proto_rawDescOnce.Do(func() {
		file_account_associations_platform_proto_rawDescData = protoimpl.X.CompressGZIP(file_account_associations_platform_proto_rawDescData)
	})
	return file_account_associations_platform_proto_rawDescData
}

var file_account_associations_platform_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_account_associations_platform_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_account_associations_platform_proto_goTypes = []interface{}{
	(AccountAssociationsStatus_State)(0),             // 0: chainguard.platform.iam.AccountAssociationsStatus.State
	(AccountAssociationsCheckRequest_AccountType)(0), // 1: chainguard.platform.iam.AccountAssociationsCheckRequest.AccountType
	(*AccountAssociations)(nil),                      // 2: chainguard.platform.iam.AccountAssociations
	(*AccountAssociationsList)(nil),                  // 3: chainguard.platform.iam.AccountAssociationsList
	(*AccountAssociationsFilter)(nil),                // 4: chainguard.platform.iam.AccountAssociationsFilter
	(*DeleteAccountAssociationsRequest)(nil),         // 5: chainguard.platform.iam.DeleteAccountAssociationsRequest
	(*AccountAssociationsStatus)(nil),                // 6: chainguard.platform.iam.AccountAssociationsStatus
	(*AccountAssociationsCheckRequest)(nil),          // 7: chainguard.platform.iam.AccountAssociationsCheckRequest
	(*AccountAssociations_Amazon)(nil),               // 8: chainguard.platform.iam.AccountAssociations.Amazon
	(*AccountAssociations_Google)(nil),               // 9: chainguard.platform.iam.AccountAssociations.Google
	(*AccountAssociations_GitHubInstallation)(nil),   // 10: chainguard.platform.iam.AccountAssociations.GitHubInstallation
	(*AccountAssociations_Chainguard)(nil),           // 11: chainguard.platform.iam.AccountAssociations.Chainguard
	nil,                                              // 12: chainguard.platform.iam.AccountAssociations.Chainguard.ServiceBindingsEntry
	(*emptypb.Empty)(nil),                            // 13: google.protobuf.Empty
}
var file_account_associations_platform_proto_depIdxs = []int32{
	8,  // 0: chainguard.platform.iam.AccountAssociations.amazon:type_name -> chainguard.platform.iam.AccountAssociations.Amazon
	9,  // 1: chainguard.platform.iam.AccountAssociations.google:type_name -> chainguard.platform.iam.AccountAssociations.Google
	10, // 2: chainguard.platform.iam.AccountAssociations.github:type_name -> chainguard.platform.iam.AccountAssociations.GitHubInstallation
	11, // 3: chainguard.platform.iam.AccountAssociations.chainguard:type_name -> chainguard.platform.iam.AccountAssociations.Chainguard
	2,  // 4: chainguard.platform.iam.AccountAssociationsList.items:type_name -> chainguard.platform.iam.AccountAssociations
	0,  // 5: chainguard.platform.iam.AccountAssociationsStatus.ready:type_name -> chainguard.platform.iam.AccountAssociationsStatus.State
	1,  // 6: chainguard.platform.iam.AccountAssociationsCheckRequest.account_type:type_name -> chainguard.platform.iam.AccountAssociationsCheckRequest.AccountType
	12, // 7: chainguard.platform.iam.AccountAssociations.Chainguard.service_bindings:type_name -> chainguard.platform.iam.AccountAssociations.Chainguard.ServiceBindingsEntry
	2,  // 8: chainguard.platform.iam.GroupAccountAssociations.Create:input_type -> chainguard.platform.iam.AccountAssociations
	2,  // 9: chainguard.platform.iam.GroupAccountAssociations.Update:input_type -> chainguard.platform.iam.AccountAssociations
	4,  // 10: chainguard.platform.iam.GroupAccountAssociations.List:input_type -> chainguard.platform.iam.AccountAssociationsFilter
	5,  // 11: chainguard.platform.iam.GroupAccountAssociations.Delete:input_type -> chainguard.platform.iam.DeleteAccountAssociationsRequest
	7,  // 12: chainguard.platform.iam.GroupAccountAssociations.Check:input_type -> chainguard.platform.iam.AccountAssociationsCheckRequest
	2,  // 13: chainguard.platform.iam.GroupAccountAssociations.Create:output_type -> chainguard.platform.iam.AccountAssociations
	2,  // 14: chainguard.platform.iam.GroupAccountAssociations.Update:output_type -> chainguard.platform.iam.AccountAssociations
	3,  // 15: chainguard.platform.iam.GroupAccountAssociations.List:output_type -> chainguard.platform.iam.AccountAssociationsList
	13, // 16: chainguard.platform.iam.GroupAccountAssociations.Delete:output_type -> google.protobuf.Empty
	6,  // 17: chainguard.platform.iam.GroupAccountAssociations.Check:output_type -> chainguard.platform.iam.AccountAssociationsStatus
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_account_associations_platform_proto_init() }
func file_account_associations_platform_proto_init() {
	if File_account_associations_platform_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_account_associations_platform_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAssociations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_associations_platform_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAssociationsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_associations_platform_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAssociationsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_associations_platform_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountAssociationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_associations_platform_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAssociationsStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_associations_platform_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAssociationsCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_associations_platform_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAssociations_Amazon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_associations_platform_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAssociations_Google); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_associations_platform_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAssociations_GitHubInstallation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_associations_platform_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAssociations_Chainguard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_account_associations_platform_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_account_associations_platform_proto_goTypes,
		DependencyIndexes: file_account_associations_platform_proto_depIdxs,
		EnumInfos:         file_account_associations_platform_proto_enumTypes,
		MessageInfos:      file_account_associations_platform_proto_msgTypes,
	}.Build()
	File_account_associations_platform_proto = out.File
	file_account_associations_platform_proto_rawDesc = nil
	file_account_associations_platform_proto_goTypes = nil
	file_account_associations_platform_proto_depIdxs = nil
}
