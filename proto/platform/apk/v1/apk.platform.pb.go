// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.1
// source: apk.platform.proto

package v1

import (
	_ "chainguard.dev/sdk/proto/annotations"
	v1 "chainguard.dev/sdk/proto/platform/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// APKFilter is a filter for APKs.
//
// At a minimum the uidp and arch must be set.
type APKFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uidp *v1.UIDPFilter `protobuf:"bytes,1,opt,name=uidp,proto3" json:"uidp,omitempty"`
	// A name to filter by.
	PackageName string `protobuf:"bytes,2,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	// An architecture to filter by (e.g., x86_64 or aarch64).
	Architecture string `protobuf:"bytes,3,opt,name=architecture,proto3" json:"architecture,omitempty"`
}

func (x *APKFilter) Reset() {
	*x = APKFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apk_platform_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APKFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APKFilter) ProtoMessage() {}

func (x *APKFilter) ProtoReflect() protoreflect.Message {
	mi := &file_apk_platform_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APKFilter.ProtoReflect.Descriptor instead.
func (*APKFilter) Descriptor() ([]byte, []int) {
	return file_apk_platform_proto_rawDescGZIP(), []int{0}
}

func (x *APKFilter) GetUidp() *v1.UIDPFilter {
	if x != nil {
		return x.Uidp
	}
	return nil
}

func (x *APKFilter) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *APKFilter) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

// APKList is a list of APKs.
type APKList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The APKs returned by the list request.
	Items []*APKPackage `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *APKList) Reset() {
	*x = APKList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apk_platform_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APKList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APKList) ProtoMessage() {}

func (x *APKList) ProtoReflect() protoreflect.Message {
	mi := &file_apk_platform_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APKList.ProtoReflect.Descriptor instead.
func (*APKList) Descriptor() ([]byte, []int) {
	return file_apk_platform_proto_rawDescGZIP(), []int{1}
}

func (x *APKList) GetItems() []*APKPackage {
	if x != nil {
		return x.Items
	}
	return nil
}

// APKPackage is an APK package and its metadata.
//
// An APK can be downloaded by requesting
// https://apk.cgr.dev/{group}/{arch}/{pkgname}-{pkgver}.apk
// with suitable credentials.
//
// The fields 10+ are the fields that make up the APKINDEX format
// from here: https://wiki.alpinelinux.org/wiki/Apk_spec#APKINDEX_Format
type APKPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id, identifier of this APK, a UIDP under a Group.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Checksum, the checksum of the package.
	Checksum []byte `protobuf:"bytes,10,opt,name=checksum,proto3" json:"checksum,omitempty"`
	// Package name, the name of the package.
	PackageName string `protobuf:"bytes,11,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	// Package version, the version of the package (e.g., 1.2.3-r4).
	Version string `protobuf:"bytes,12,opt,name=version,proto3" json:"version,omitempty"`
	// Package architecture, the architecture of the package (e.g., x86_64 or
	// aarch64).
	Architecture string `protobuf:"bytes,13,opt,name=architecture,proto3" json:"architecture,omitempty"`
	// Package size, the size of the package in bytes.
	Size uint64 `protobuf:"varint,14,opt,name=size,proto3" json:"size,omitempty"`
	// Installed size, the size of the package when installed in bytes.
	InstalledSize uint64 `protobuf:"varint,15,opt,name=installed_size,json=installedSize,proto3" json:"installed_size,omitempty"`
	// Package description, a description of the package.
	Description string `protobuf:"bytes,16,opt,name=description,proto3" json:"description,omitempty"`
	// Package URL, a URL for the package.
	Url string `protobuf:"bytes,17,opt,name=url,proto3" json:"url,omitempty"`
	// Package license, the license of the package.
	License string `protobuf:"bytes,18,opt,name=license,proto3" json:"license,omitempty"`
	// Package origin, the origin of the package (if the package is a subpackage).
	Origin string `protobuf:"bytes,19,opt,name=origin,proto3" json:"origin,omitempty"`
	// Package maintainer, unused.
	Maintainer string `protobuf:"bytes,20,opt,name=maintainer,proto3" json:"maintainer,omitempty"`
	// Package build time, the time the package was built.
	BuildTime *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=build_time,json=buildTime,proto3" json:"build_time,omitempty"`
	// Package commit, the commit of the package.
	RepoCommit string `protobuf:"bytes,22,opt,name=repo_commit,json=repoCommit,proto3" json:"repo_commit,omitempty"`
	// Package provider priority, the priority of the package provider.
	// If multiple packages provide the same virtual package, the package
	// with the highest provider priority is selected.
	ProviderPriority uint64 `protobuf:"varint,23,opt,name=provider_priority,json=providerPriority,proto3" json:"provider_priority,omitempty"`
	// Package depend, the direct runtime dependencies of the package.
	Depend []string `protobuf:"bytes,24,rep,name=depend,proto3" json:"depend,omitempty"`
	// Package provides, the virtual packages provided by the package.
	Provides []string `protobuf:"bytes,25,rep,name=provides,proto3" json:"provides,omitempty"`
	// Package install if, the conditions under which the package is installed.
	InstallIf []string `protobuf:"bytes,26,rep,name=install_if,json=installIf,proto3" json:"install_if,omitempty"`
}

func (x *APKPackage) Reset() {
	*x = APKPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apk_platform_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APKPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APKPackage) ProtoMessage() {}

func (x *APKPackage) ProtoReflect() protoreflect.Message {
	mi := &file_apk_platform_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APKPackage.ProtoReflect.Descriptor instead.
func (*APKPackage) Descriptor() ([]byte, []int) {
	return file_apk_platform_proto_rawDescGZIP(), []int{2}
}

func (x *APKPackage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *APKPackage) GetChecksum() []byte {
	if x != nil {
		return x.Checksum
	}
	return nil
}

func (x *APKPackage) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *APKPackage) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *APKPackage) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *APKPackage) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *APKPackage) GetInstalledSize() uint64 {
	if x != nil {
		return x.InstalledSize
	}
	return 0
}

func (x *APKPackage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *APKPackage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *APKPackage) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *APKPackage) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *APKPackage) GetMaintainer() string {
	if x != nil {
		return x.Maintainer
	}
	return ""
}

func (x *APKPackage) GetBuildTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BuildTime
	}
	return nil
}

func (x *APKPackage) GetRepoCommit() string {
	if x != nil {
		return x.RepoCommit
	}
	return ""
}

func (x *APKPackage) GetProviderPriority() uint64 {
	if x != nil {
		return x.ProviderPriority
	}
	return 0
}

func (x *APKPackage) GetDepend() []string {
	if x != nil {
		return x.Depend
	}
	return nil
}

func (x *APKPackage) GetProvides() []string {
	if x != nil {
		return x.Provides
	}
	return nil
}

func (x *APKPackage) GetInstallIf() []string {
	if x != nil {
		return x.InstallIf
	}
	return nil
}

var File_apk_platform_proto protoreflect.FileDescriptor

var file_apk_platform_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x70, 0x6b, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x70, 0x6b, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x69, 0x64, 0x70, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e, 0x01, 0x0a,
	0x09, 0x41, 0x50, 0x4b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x04, 0x75, 0x69,
	0x64, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x49, 0x44, 0x50, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x69, 0x64, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x22, 0x44, 0x0a,
	0x07, 0x41, 0x50, 0x4b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x70,
	0x6b, 0x2e, 0x41, 0x50, 0x4b, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0xb6, 0x04, 0x0a, 0x0a, 0x41, 0x50, 0x4b, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x12, 0x39, 0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x70, 0x6f, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x2b, 0x0a, 0x11,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x18, 0x18, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x73, 0x18, 0x19, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x66, 0x18, 0x1a, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x49, 0x66, 0x32, 0x7f, 0x0a, 0x03,
	0x41, 0x50, 0x4b, 0x12, 0x78, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x50, 0x4b, 0x73, 0x12,
	0x22, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x70, 0x6b, 0x2e, 0x41, 0x50, 0x4b, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x1a, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x70, 0x6b, 0x2e, 0x41, 0x50,
	0x4b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f,
	0x61, 0x70, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x8a,
	0xaf, 0xa8, 0xd2, 0x05, 0x08, 0x12, 0x06, 0x0a, 0x02, 0xf4, 0x0c, 0x10, 0x01, 0x42, 0x62, 0x0a,
	0x22, 0x64, 0x65, 0x76, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x70, 0x6b,
	0x2e, 0x76, 0x31, 0x42, 0x10, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x50, 0x4b,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x28, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x61, 0x70, 0x6b, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apk_platform_proto_rawDescOnce sync.Once
	file_apk_platform_proto_rawDescData = file_apk_platform_proto_rawDesc
)

func file_apk_platform_proto_rawDescGZIP() []byte {
	file_apk_platform_proto_rawDescOnce.Do(func() {
		file_apk_platform_proto_rawDescData = protoimpl.X.CompressGZIP(file_apk_platform_proto_rawDescData)
	})
	return file_apk_platform_proto_rawDescData
}

var file_apk_platform_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_apk_platform_proto_goTypes = []any{
	(*APKFilter)(nil),             // 0: chainguard.platform.apk.APKFilter
	(*APKList)(nil),               // 1: chainguard.platform.apk.APKList
	(*APKPackage)(nil),            // 2: chainguard.platform.apk.APKPackage
	(*v1.UIDPFilter)(nil),         // 3: chainguard.platform.common.UIDPFilter
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_apk_platform_proto_depIdxs = []int32{
	3, // 0: chainguard.platform.apk.APKFilter.uidp:type_name -> chainguard.platform.common.UIDPFilter
	2, // 1: chainguard.platform.apk.APKList.items:type_name -> chainguard.platform.apk.APKPackage
	4, // 2: chainguard.platform.apk.APKPackage.build_time:type_name -> google.protobuf.Timestamp
	0, // 3: chainguard.platform.apk.APK.ListAPKs:input_type -> chainguard.platform.apk.APKFilter
	1, // 4: chainguard.platform.apk.APK.ListAPKs:output_type -> chainguard.platform.apk.APKList
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_apk_platform_proto_init() }
func file_apk_platform_proto_init() {
	if File_apk_platform_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apk_platform_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*APKFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apk_platform_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*APKList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apk_platform_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*APKPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apk_platform_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apk_platform_proto_goTypes,
		DependencyIndexes: file_apk_platform_proto_depIdxs,
		MessageInfos:      file_apk_platform_proto_msgTypes,
	}.Build()
	File_apk_platform_proto = out.File
	file_apk_platform_proto_rawDesc = nil
	file_apk_platform_proto_goTypes = nil
	file_apk_platform_proto_depIdxs = nil
}
