// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.3
// source: apko.platform.proto

package v1

import (
	_ "chainguard.dev/sdk/proto/annotations"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResolveConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *ApkoConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// The repository context in which to perform the resolution.
	// This is relevant for how we authenticate for APK access.
	RepoUidp string `protobuf:"bytes,2,opt,name=repo_uidp,json=repoUidp,proto3" json:"repo_uidp,omitempty"`
}

func (x *ResolveConfigRequest) Reset() {
	*x = ResolveConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apko_platform_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveConfigRequest) ProtoMessage() {}

func (x *ResolveConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apko_platform_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveConfigRequest.ProtoReflect.Descriptor instead.
func (*ResolveConfigRequest) Descriptor() ([]byte, []int) {
	return file_apko_platform_proto_rawDescGZIP(), []int{0}
}

func (x *ResolveConfigRequest) GetConfig() *ApkoConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ResolveConfigRequest) GetRepoUidp() string {
	if x != nil {
		return x.RepoUidp
	}
	return ""
}

type ApkoConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contents    *ApkoConfig_Contents       `protobuf:"bytes,1,opt,name=contents,proto3" json:"contents,omitempty"`
	Environment map[string]string          `protobuf:"bytes,2,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Accounts    *ApkoConfig_Accounts       `protobuf:"bytes,3,opt,name=accounts,proto3" json:"accounts,omitempty"`
	Entrypoint  *ApkoConfig_Entrypoint     `protobuf:"bytes,4,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Cmd         string                     `protobuf:"bytes,5,opt,name=cmd,proto3" json:"cmd,omitempty"`
	WorkDir     string                     `protobuf:"bytes,6,opt,name=work_dir,json=workDir,proto3" json:"work_dir,omitempty"`
	Annotations map[string]string          `protobuf:"bytes,7,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Paths       []*ApkoConfig_PathMutation `protobuf:"bytes,8,rep,name=paths,proto3" json:"paths,omitempty"`
	Archs       []string                   `protobuf:"bytes,9,rep,name=archs,proto3" json:"archs,omitempty"`
	// These are unused, and only provided for compatibility with
	// ImageConfiguration.
	Volumes    []string `protobuf:"bytes,10,rep,name=volumes,proto3" json:"volumes,omitempty"`
	Include    string   `protobuf:"bytes,11,opt,name=include,proto3" json:"include,omitempty"`
	StopSignal string   `protobuf:"bytes,12,opt,name=stop_signal,json=stopSignal,proto3" json:"stop_signal,omitempty"`
	VcsUrl     string   `protobuf:"bytes,13,opt,name=vcs_url,json=vcsUrl,proto3" json:"vcs_url,omitempty"`
}

func (x *ApkoConfig) Reset() {
	*x = ApkoConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apko_platform_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApkoConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApkoConfig) ProtoMessage() {}

func (x *ApkoConfig) ProtoReflect() protoreflect.Message {
	mi := &file_apko_platform_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApkoConfig.ProtoReflect.Descriptor instead.
func (*ApkoConfig) Descriptor() ([]byte, []int) {
	return file_apko_platform_proto_rawDescGZIP(), []int{1}
}

func (x *ApkoConfig) GetContents() *ApkoConfig_Contents {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *ApkoConfig) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *ApkoConfig) GetAccounts() *ApkoConfig_Accounts {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *ApkoConfig) GetEntrypoint() *ApkoConfig_Entrypoint {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

func (x *ApkoConfig) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *ApkoConfig) GetWorkDir() string {
	if x != nil {
		return x.WorkDir
	}
	return ""
}

func (x *ApkoConfig) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *ApkoConfig) GetPaths() []*ApkoConfig_PathMutation {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *ApkoConfig) GetArchs() []string {
	if x != nil {
		return x.Archs
	}
	return nil
}

func (x *ApkoConfig) GetVolumes() []string {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *ApkoConfig) GetInclude() string {
	if x != nil {
		return x.Include
	}
	return ""
}

func (x *ApkoConfig) GetStopSignal() string {
	if x != nil {
		return x.StopSignal
	}
	return ""
}

func (x *ApkoConfig) GetVcsUrl() string {
	if x != nil {
		return x.VcsUrl
	}
	return ""
}

type BuildImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Config to build. It must be resolved before it can be built.
	Config *ApkoConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// Repo UIDP to push to.
	RepoUidp string `protobuf:"bytes,2,opt,name=repo_uidp,json=repoUidp,proto3" json:"repo_uidp,omitempty"`
	// The media type of the layer to build.
	MediaType string `protobuf:"bytes,3,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`
}

func (x *BuildImageRequest) Reset() {
	*x = BuildImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apko_platform_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildImageRequest) ProtoMessage() {}

func (x *BuildImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apko_platform_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildImageRequest.ProtoReflect.Descriptor instead.
func (*BuildImageRequest) Descriptor() ([]byte, []int) {
	return file_apko_platform_proto_rawDescGZIP(), []int{2}
}

func (x *BuildImageRequest) GetConfig() *ApkoConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *BuildImageRequest) GetRepoUidp() string {
	if x != nil {
		return x.RepoUidp
	}
	return ""
}

func (x *BuildImageRequest) GetMediaType() string {
	if x != nil {
		return x.MediaType
	}
	return ""
}

type BuildImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Digest of the built image.
	Digest string `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"`
	// The "build date epoch" of the produced image.
	BuildDateEpoch *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=build_date_epoch,json=buildDateEpoch,proto3" json:"build_date_epoch,omitempty"`
	// The user error message, if any.
	// This is to distinguish between an error in the build process
	// and an error in the user's configuration (like accessing a
	// non-existent package).
	UserError string `protobuf:"bytes,3,opt,name=user_error,json=userError,proto3" json:"user_error,omitempty"`
	// The ID of the Build Report.
	BuildReportId string `protobuf:"bytes,4,opt,name=build_report_id,json=buildReportId,proto3" json:"build_report_id,omitempty"`
}

func (x *BuildImageResponse) Reset() {
	*x = BuildImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apko_platform_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildImageResponse) ProtoMessage() {}

func (x *BuildImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apko_platform_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildImageResponse.ProtoReflect.Descriptor instead.
func (*BuildImageResponse) Descriptor() ([]byte, []int) {
	return file_apko_platform_proto_rawDescGZIP(), []int{3}
}

func (x *BuildImageResponse) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *BuildImageResponse) GetBuildDateEpoch() *timestamppb.Timestamp {
	if x != nil {
		return x.BuildDateEpoch
	}
	return nil
}

func (x *BuildImageResponse) GetUserError() string {
	if x != nil {
		return x.UserError
	}
	return ""
}

func (x *BuildImageResponse) GetBuildReportId() string {
	if x != nil {
		return x.BuildReportId
	}
	return ""
}

type ApkoConfig_Contents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repositories      []string `protobuf:"bytes,1,rep,name=repositories,proto3" json:"repositories,omitempty"`
	BuildRepositories []string `protobuf:"bytes,2,rep,name=build_repositories,json=buildRepositories,proto3" json:"build_repositories,omitempty"`
	Keyring           []string `protobuf:"bytes,3,rep,name=keyring,proto3" json:"keyring,omitempty"`
	Packages          []string `protobuf:"bytes,4,rep,name=packages,proto3" json:"packages,omitempty"`
}

func (x *ApkoConfig_Contents) Reset() {
	*x = ApkoConfig_Contents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apko_platform_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApkoConfig_Contents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApkoConfig_Contents) ProtoMessage() {}

func (x *ApkoConfig_Contents) ProtoReflect() protoreflect.Message {
	mi := &file_apko_platform_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApkoConfig_Contents.ProtoReflect.Descriptor instead.
func (*ApkoConfig_Contents) Descriptor() ([]byte, []int) {
	return file_apko_platform_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ApkoConfig_Contents) GetRepositories() []string {
	if x != nil {
		return x.Repositories
	}
	return nil
}

func (x *ApkoConfig_Contents) GetBuildRepositories() []string {
	if x != nil {
		return x.BuildRepositories
	}
	return nil
}

func (x *ApkoConfig_Contents) GetKeyring() []string {
	if x != nil {
		return x.Keyring
	}
	return nil
}

func (x *ApkoConfig_Contents) GetPackages() []string {
	if x != nil {
		return x.Packages
	}
	return nil
}

type ApkoConfig_Accounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*ApkoConfig_Accounts_Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	Users  []*ApkoConfig_Accounts_User  `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	RunAs  string                       `protobuf:"bytes,3,opt,name=run_as,json=runAs,proto3" json:"run_as,omitempty"`
}

func (x *ApkoConfig_Accounts) Reset() {
	*x = ApkoConfig_Accounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apko_platform_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApkoConfig_Accounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApkoConfig_Accounts) ProtoMessage() {}

func (x *ApkoConfig_Accounts) ProtoReflect() protoreflect.Message {
	mi := &file_apko_platform_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApkoConfig_Accounts.ProtoReflect.Descriptor instead.
func (*ApkoConfig_Accounts) Descriptor() ([]byte, []int) {
	return file_apko_platform_proto_rawDescGZIP(), []int{1, 2}
}

func (x *ApkoConfig_Accounts) GetGroups() []*ApkoConfig_Accounts_Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *ApkoConfig_Accounts) GetUsers() []*ApkoConfig_Accounts_User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ApkoConfig_Accounts) GetRunAs() string {
	if x != nil {
		return x.RunAs
	}
	return ""
}

type ApkoConfig_Entrypoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Command       string            `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	ShellFragment string            `protobuf:"bytes,3,opt,name=shell_fragment,json=shellFragment,proto3" json:"shell_fragment,omitempty"`
	Services      map[string]string `protobuf:"bytes,4,rep,name=services,proto3" json:"services,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ApkoConfig_Entrypoint) Reset() {
	*x = ApkoConfig_Entrypoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apko_platform_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApkoConfig_Entrypoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApkoConfig_Entrypoint) ProtoMessage() {}

func (x *ApkoConfig_Entrypoint) ProtoReflect() protoreflect.Message {
	mi := &file_apko_platform_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApkoConfig_Entrypoint.ProtoReflect.Descriptor instead.
func (*ApkoConfig_Entrypoint) Descriptor() ([]byte, []int) {
	return file_apko_platform_proto_rawDescGZIP(), []int{1, 3}
}

func (x *ApkoConfig_Entrypoint) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ApkoConfig_Entrypoint) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *ApkoConfig_Entrypoint) GetShellFragment() string {
	if x != nil {
		return x.ShellFragment
	}
	return ""
}

func (x *ApkoConfig_Entrypoint) GetServices() map[string]string {
	if x != nil {
		return x.Services
	}
	return nil
}

type ApkoConfig_PathMutation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path        string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Type        string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Uid         uint32 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid         uint32 `protobuf:"varint,4,opt,name=gid,proto3" json:"gid,omitempty"`
	Permissions uint32 `protobuf:"varint,5,opt,name=permissions,proto3" json:"permissions,omitempty"`
	Source      string `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`
	Recursive   bool   `protobuf:"varint,7,opt,name=recursive,proto3" json:"recursive,omitempty"`
}

func (x *ApkoConfig_PathMutation) Reset() {
	*x = ApkoConfig_PathMutation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apko_platform_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApkoConfig_PathMutation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApkoConfig_PathMutation) ProtoMessage() {}

func (x *ApkoConfig_PathMutation) ProtoReflect() protoreflect.Message {
	mi := &file_apko_platform_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApkoConfig_PathMutation.ProtoReflect.Descriptor instead.
func (*ApkoConfig_PathMutation) Descriptor() ([]byte, []int) {
	return file_apko_platform_proto_rawDescGZIP(), []int{1, 5}
}

func (x *ApkoConfig_PathMutation) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ApkoConfig_PathMutation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ApkoConfig_PathMutation) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ApkoConfig_PathMutation) GetGid() uint32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *ApkoConfig_PathMutation) GetPermissions() uint32 {
	if x != nil {
		return x.Permissions
	}
	return 0
}

func (x *ApkoConfig_PathMutation) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ApkoConfig_PathMutation) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

type ApkoConfig_Accounts_Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gid       uint32 `protobuf:"varint,1,opt,name=gid,proto3" json:"gid,omitempty"`
	GroupName string `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
}

func (x *ApkoConfig_Accounts_Group) Reset() {
	*x = ApkoConfig_Accounts_Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apko_platform_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApkoConfig_Accounts_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApkoConfig_Accounts_Group) ProtoMessage() {}

func (x *ApkoConfig_Accounts_Group) ProtoReflect() protoreflect.Message {
	mi := &file_apko_platform_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApkoConfig_Accounts_Group.ProtoReflect.Descriptor instead.
func (*ApkoConfig_Accounts_Group) Descriptor() ([]byte, []int) {
	return file_apko_platform_proto_rawDescGZIP(), []int{1, 2, 0}
}

func (x *ApkoConfig_Accounts_Group) GetGid() uint32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *ApkoConfig_Accounts_Group) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type ApkoConfig_Accounts_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	UserName  string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Gid       uint32 `protobuf:"varint,3,opt,name=gid,proto3" json:"gid,omitempty"`
	GroupName string `protobuf:"bytes,4,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
}

func (x *ApkoConfig_Accounts_User) Reset() {
	*x = ApkoConfig_Accounts_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apko_platform_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApkoConfig_Accounts_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApkoConfig_Accounts_User) ProtoMessage() {}

func (x *ApkoConfig_Accounts_User) ProtoReflect() protoreflect.Message {
	mi := &file_apko_platform_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApkoConfig_Accounts_User.ProtoReflect.Descriptor instead.
func (*ApkoConfig_Accounts_User) Descriptor() ([]byte, []int) {
	return file_apko_platform_proto_rawDescGZIP(), []int{1, 2, 1}
}

func (x *ApkoConfig_Accounts_User) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ApkoConfig_Accounts_User) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ApkoConfig_Accounts_User) GetGid() uint32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *ApkoConfig_Accounts_User) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

var File_apko_platform_proto protoreflect.FileDescriptor

var file_apko_platform_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x70, 0x6b, 0x6f, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x16, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7d, 0x0a, 0x14, 0x52, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2e, 0x41, 0x70, 0x6b, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x23, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x75, 0x69, 0x64,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0x90, 0xaf, 0xa8, 0xd2, 0x05, 0x01, 0x52,
	0x08, 0x72, 0x65, 0x70, 0x6f, 0x55, 0x69, 0x64, 0x70, 0x22, 0xe7, 0x0d, 0x0a, 0x0a, 0x41, 0x70,
	0x6b, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4d, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x70, 0x6b, 0x6f, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x5b, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x70, 0x6b, 0x6f,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x70, 0x6b, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x53, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x70, 0x6b, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x6f,
	0x72, 0x6b, 0x44, 0x69, 0x72, 0x12, 0x5b, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x70, 0x6b, 0x6f, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x4b, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2e, 0x41, 0x70, 0x6b, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x61, 0x74, 0x68,
	0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x72, 0x63, 0x68, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x72, 0x63, 0x68, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x6f,
	0x70, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x74, 0x6f, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x63,
	0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x63, 0x73,
	0x55, 0x72, 0x6c, 0x1a, 0x93, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x11, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xe2, 0x02, 0x0a, 0x08, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x4f, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x70, 0x6b, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x4c, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x70, 0x6b, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f, 0x61, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x41, 0x73, 0x1a, 0x38, 0x0a, 0x05,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x66, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x67, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xfd,
	0x01, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x68, 0x65, 0x6c, 0x6c, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x5d, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x2e, 0x41, 0x70, 0x6b, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e,
	0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xb2,
	0x01, 0x0a, 0x0c, 0x50, 0x61, 0x74, 0x68, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69,
	0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73,
	0x69, 0x76, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x11, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x70, 0x6b, 0x6f, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x23, 0x0a, 0x09, 0x72,
	0x65, 0x70, 0x6f, 0x5f, 0x75, 0x69, 0x64, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06,
	0x90, 0xaf, 0xa8, 0xd2, 0x05, 0x01, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x55, 0x69, 0x64, 0x70,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xb9, 0x01, 0x0a, 0x12, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x44,
	0x0a, 0x10, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x61, 0x74, 0x65, 0x45,
	0x70, 0x6f, 0x63, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x32, 0xda, 0x02, 0x0a, 0x04,
	0x41, 0x70, 0x6b, 0x6f, 0x12, 0xa5, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x70, 0x6b, 0x6f, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22,
	0x1f, 0x2f, 0x61, 0x70, 0x6b, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x65, 0x2f, 0x7b, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x75, 0x69, 0x64, 0x70, 0x3d, 0x2a, 0x2a, 0x7d,
	0x8a, 0xaf, 0xa8, 0xd2, 0x05, 0x06, 0x12, 0x04, 0x0a, 0x02, 0xf4, 0x0c, 0x12, 0xa9, 0x01, 0x0a,
	0x0a, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x2e, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x61, 0x70, 0x6b, 0x6f,
	0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x7b, 0x72, 0x65, 0x70, 0x6f, 0x5f,
	0x75, 0x69, 0x64, 0x70, 0x3d, 0x2a, 0x2a, 0x7d, 0x8a, 0xaf, 0xa8, 0xd2, 0x05, 0x0a, 0x12, 0x08,
	0x0a, 0x06, 0xf4, 0x0c, 0xc7, 0x0c, 0xc4, 0x0c, 0x42, 0x75, 0x0a, 0x27, 0x64, 0x65, 0x76, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x42, 0x19, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x41, 0x70, 0x6b, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x64, 0x65, 0x76,
	0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apko_platform_proto_rawDescOnce sync.Once
	file_apko_platform_proto_rawDescData = file_apko_platform_proto_rawDesc
)

func file_apko_platform_proto_rawDescGZIP() []byte {
	file_apko_platform_proto_rawDescOnce.Do(func() {
		file_apko_platform_proto_rawDescData = protoimpl.X.CompressGZIP(file_apko_platform_proto_rawDescData)
	})
	return file_apko_platform_proto_rawDescData
}

var file_apko_platform_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_apko_platform_proto_goTypes = []any{
	(*ResolveConfigRequest)(nil),      // 0: chainguard.platform.registry.ResolveConfigRequest
	(*ApkoConfig)(nil),                // 1: chainguard.platform.registry.ApkoConfig
	(*BuildImageRequest)(nil),         // 2: chainguard.platform.registry.BuildImageRequest
	(*BuildImageResponse)(nil),        // 3: chainguard.platform.registry.BuildImageResponse
	(*ApkoConfig_Contents)(nil),       // 4: chainguard.platform.registry.ApkoConfig.Contents
	nil,                               // 5: chainguard.platform.registry.ApkoConfig.EnvironmentEntry
	(*ApkoConfig_Accounts)(nil),       // 6: chainguard.platform.registry.ApkoConfig.Accounts
	(*ApkoConfig_Entrypoint)(nil),     // 7: chainguard.platform.registry.ApkoConfig.Entrypoint
	nil,                               // 8: chainguard.platform.registry.ApkoConfig.AnnotationsEntry
	(*ApkoConfig_PathMutation)(nil),   // 9: chainguard.platform.registry.ApkoConfig.PathMutation
	(*ApkoConfig_Accounts_Group)(nil), // 10: chainguard.platform.registry.ApkoConfig.Accounts.Group
	(*ApkoConfig_Accounts_User)(nil),  // 11: chainguard.platform.registry.ApkoConfig.Accounts.User
	nil,                               // 12: chainguard.platform.registry.ApkoConfig.Entrypoint.ServicesEntry
	(*timestamppb.Timestamp)(nil),     // 13: google.protobuf.Timestamp
}
var file_apko_platform_proto_depIdxs = []int32{
	1,  // 0: chainguard.platform.registry.ResolveConfigRequest.config:type_name -> chainguard.platform.registry.ApkoConfig
	4,  // 1: chainguard.platform.registry.ApkoConfig.contents:type_name -> chainguard.platform.registry.ApkoConfig.Contents
	5,  // 2: chainguard.platform.registry.ApkoConfig.environment:type_name -> chainguard.platform.registry.ApkoConfig.EnvironmentEntry
	6,  // 3: chainguard.platform.registry.ApkoConfig.accounts:type_name -> chainguard.platform.registry.ApkoConfig.Accounts
	7,  // 4: chainguard.platform.registry.ApkoConfig.entrypoint:type_name -> chainguard.platform.registry.ApkoConfig.Entrypoint
	8,  // 5: chainguard.platform.registry.ApkoConfig.annotations:type_name -> chainguard.platform.registry.ApkoConfig.AnnotationsEntry
	9,  // 6: chainguard.platform.registry.ApkoConfig.paths:type_name -> chainguard.platform.registry.ApkoConfig.PathMutation
	1,  // 7: chainguard.platform.registry.BuildImageRequest.config:type_name -> chainguard.platform.registry.ApkoConfig
	13, // 8: chainguard.platform.registry.BuildImageResponse.build_date_epoch:type_name -> google.protobuf.Timestamp
	10, // 9: chainguard.platform.registry.ApkoConfig.Accounts.groups:type_name -> chainguard.platform.registry.ApkoConfig.Accounts.Group
	11, // 10: chainguard.platform.registry.ApkoConfig.Accounts.users:type_name -> chainguard.platform.registry.ApkoConfig.Accounts.User
	12, // 11: chainguard.platform.registry.ApkoConfig.Entrypoint.services:type_name -> chainguard.platform.registry.ApkoConfig.Entrypoint.ServicesEntry
	0,  // 12: chainguard.platform.registry.Apko.ResolveConfig:input_type -> chainguard.platform.registry.ResolveConfigRequest
	2,  // 13: chainguard.platform.registry.Apko.BuildImage:input_type -> chainguard.platform.registry.BuildImageRequest
	1,  // 14: chainguard.platform.registry.Apko.ResolveConfig:output_type -> chainguard.platform.registry.ApkoConfig
	3,  // 15: chainguard.platform.registry.Apko.BuildImage:output_type -> chainguard.platform.registry.BuildImageResponse
	14, // [14:16] is the sub-list for method output_type
	12, // [12:14] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_apko_platform_proto_init() }
func file_apko_platform_proto_init() {
	if File_apko_platform_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apko_platform_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ResolveConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apko_platform_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ApkoConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apko_platform_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*BuildImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apko_platform_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*BuildImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apko_platform_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ApkoConfig_Contents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apko_platform_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ApkoConfig_Accounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apko_platform_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ApkoConfig_Entrypoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apko_platform_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ApkoConfig_PathMutation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apko_platform_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ApkoConfig_Accounts_Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apko_platform_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ApkoConfig_Accounts_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apko_platform_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apko_platform_proto_goTypes,
		DependencyIndexes: file_apko_platform_proto_depIdxs,
		MessageInfos:      file_apko_platform_proto_msgTypes,
	}.Build()
	File_apko_platform_proto = out.File
	file_apko_platform_proto_rawDesc = nil
	file_apko_platform_proto_goTypes = nil
	file_apko_platform_proto_depIdxs = nil
}
