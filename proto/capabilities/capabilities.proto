syntax = "proto3";

option go_package = "chainguard.dev/sdk/proto/capabilities";
option java_multiple_files = true;
option java_package = "dev.chainguard.sdk.capabilities";
option java_outer_classname = "CapabilitiesProto";

package chainguard.capabilities;

import "google/protobuf/descriptor.proto";

extend google.protobuf.EnumValueOptions {
  // This decorates our capability enumeration values with
  // the friendly name to show to humans.
  string name = 189350643;

  // This decorates our capability enumeration values with
  // a bit index enabling compacted encodings.
  uint32 bit = 20221109;
}

// Capability is an enumeration of the Chainguard IAM capabilities.
enum Capability {
  UNKNOWN = 0;

  CAP_IAM_GROUPS_CREATE = 101 [(name) = "groups.create", (bit) = 1];
  CAP_IAM_GROUPS_UPDATE = 102 [(name) = "groups.update", (bit) = 2];
  CAP_IAM_GROUPS_LIST   = 103 [(name) = "groups.list", (bit) = 3];
  CAP_IAM_GROUPS_DELETE = 104 [(name) = "groups.delete", (bit) = 4];

  CAP_IAM_GROUP_INVITES_CREATE = 201 [(name) = "group_invites.create", (bit) = 5];
  CAP_IAM_GROUP_INVITES_LIST   = 203 [(name) = "group_invites.list", (bit) = 6];
  CAP_IAM_GROUP_INVITES_DELETE = 204 [(name) = "group_invites.delete", (bit) = 7];

  CAP_IAM_ROLES_CREATE = 301 [(name) = "roles.create", (bit) = 8];
  CAP_IAM_ROLES_UPDATE = 302 [(name) = "roles.update", (bit) = 9];
  CAP_IAM_ROLES_LIST   = 303 [(name) = "roles.list", (bit) = 10];
  CAP_IAM_ROLES_DELETE = 304 [(name) = "roles.delete", (bit) = 11];

  CAP_IAM_ROLE_BINDINGS_CREATE = 401 [(name) = "role_bindings.create", (bit) = 12];
  CAP_IAM_ROLE_BINDINGS_UPDATE = 402 [(name) = "role_bindings.update", (bit) = 13];
  CAP_IAM_ROLE_BINDINGS_LIST   = 403 [(name) = "role_bindings.list", (bit) = 14];
  CAP_IAM_ROLE_BINDINGS_DELETE = 404 [(name) = "role_bindings.delete", (bit) = 15];

  reserved 501; // CAP_TENANT_CLUSTES_CREATE
  reserved 502; // CAP_TENANT_CLUSTES_UPDATE
  reserved 503; // CAP_TENANT_CLUSTES_LIST
  reserved 504; // CAP_TENANT_CLUSTES_DELETE
  reserved 505; // CAP_TENANT_CLUSTES_DISCOVER

  reserved 603; // CAP_TENANT_RECORDS_LIST
  reserved 613; // CAP_TENANT_RECORD_CONTEXTS_LIST
  reserved 633; // CAP_TENANT_RECORD_POLICY_RESULTS_LIST

  CAP_TENANT_RECORD_SIGNATURES_LIST     = 623 [(name) = "record_signatures.list", (bit) = 49];

  reserved 640; // CAP_TENANT_RISKS_LIST

  CAP_TENANT_SBOMS_LIST = 650 [(name) = "sboms.list", (bit) = 69];

  CAP_TENANT_VULN_REPORTS_LIST = 660 [(name) = "vuln_reports.list", (bit) = 70];

  CAP_TENANT_ATTESTATIONS_LIST = 670 [(name) = "attestations.list", (bit) = 71];

  CAP_IAM_ACCOUNT_ASSOCIATIONS_CREATE = 701 [(name) = "account_associations.create", (bit) = 21];
  CAP_IAM_ACCOUNT_ASSOCIATIONS_UPDATE = 702 [(name) = "account_associations.update", (bit) = 22];
  CAP_IAM_ACCOUNT_ASSOCIATIONS_LIST   = 703 [(name) = "account_associations.list", (bit) = 23];
  CAP_IAM_ACCOUNT_ASSOCIATIONS_DELETE = 704 [(name) = "account_associations.delete", (bit) = 24];

  reserved 801; // CAP_IAM_POLICY_CREATE
  reserved 802; // CAP_IAM_POLICY_UPDATE
  reserved 803; // CAP_IAM_POLICY_LIST
  reserved 804; // CAP_IAM_POLICY_DELETE

  CAP_IAM_IDENTITY_CREATE = 901 [(name) = "identity.create", (bit) = 29];
  CAP_IAM_IDENTITY_UPDATE = 902 [(name) = "identity.update", (bit) = 30];
  CAP_IAM_IDENTITY_LIST   = 903 [(name) = "identity.list", (bit) = 31];
  CAP_IAM_IDENTITY_DELETE = 904 [(name) = "identity.delete", (bit) = 32];

  reserved 1003; // CAP_TENANT_NODES_LIST
  reserved 1103; // CAP_TENANT_NAMESPACES_LIST
  reserved 1203; // CAP_TENANT_WORKLOADS_LIST

  CAP_IAM_IDENTITY_PROVIDERS_CREATE = 1301 [(name) = "identity_providers.create", (bit) = 52];
  CAP_IAM_IDENTITY_PROVIDERS_UPDATE = 1302 [(name) = "identity_providers.update", (bit) = 53];
  CAP_IAM_IDENTITY_PROVIDERS_LIST   = 1303 [(name) = "identity_providers.list", (bit) = 54];
  CAP_IAM_IDENTITY_PROVIDERS_DELETE = 1304 [(name) = "identity_providers.delete", (bit) = 55];

  // Events

  CAP_EVENTS_SUBSCRIPTION_CREATE = 1501 [(name) = "subscriptions.create", (bit) = 36];
  CAP_EVENTS_SUBSCRIPTION_UPDATE = 1502 [(name) = "subscriptions.update", (bit) = 37];
  CAP_EVENTS_SUBSCRIPTION_LIST   = 1503 [(name) = "subscriptions.list", (bit) = 38];
  CAP_EVENTS_SUBSCRIPTION_DELETE = 1504 [(name) = "subscriptions.delete", (bit) = 39];

  // Registry

  reserved 1601; // CAP_REGISTRY_PULL
  reserved 1602; // CAP_REGISTRY_PUSH

  CAP_REPO_CREATE = 1603 [(name) = "repo.create", (bit) = 56];
  CAP_REPO_UPDATE = 1604 [(name) = "repo.update", (bit) = 57];
  CAP_REPO_LIST   = 1605 [(name) = "repo.list",   (bit) = 58];
  CAP_REPO_DELETE = 1606 [(name) = "repo.delete", (bit) = 59];

  CAP_MANIFEST_CREATE = 1607 [(name) = "manifest.create", (bit) = 60];
  CAP_MANIFEST_UPDATE = 1608 [(name) = "manifest.update", (bit) = 61];
  CAP_MANIFEST_LIST   = 1609 [(name) = "manifest.list",   (bit) = 62];
  CAP_MANIFEST_DELETE = 1610 [(name) = "manifest.delete", (bit) = 63];

  CAP_TAG_CREATE = 1611 [(name) = "tag.create", (bit) = 64];
  CAP_TAG_UPDATE = 1612 [(name) = "tag.update", (bit) = 65];
  CAP_TAG_LIST   = 1613 [(name) = "tag.list",   (bit) = 66];
  CAP_TAG_DELETE = 1614 [(name) = "tag.delete", (bit) = 67];

  CAP_MANIFEST_METADATA_LIST = 1615 [(name) = "manifest.metadata.list", (bit) = 72];

  reserved 1701; // CAP_SIGSTORE_CREATE
  reserved 1702; // CAP_SIGSTORE_UPDATE
  reserved 1703; // CAP_SIGSTORE_LIST
  reserved 1704; // CAP_SIGSTORE_DELETE
  reserved 1705; // CAP_SIGSTORE_CERTIFICATE_CREATE

  // This is orthogonal enough that we should leave
  // it somewhat separate, so add new capabilities above.
  // TODO(mattmoor): Think about whether we can encode specific
  // controller capabilities into our access control here?
  // e.g. could each logical controller/webhook be its own
  // capability?
  CAP_GULFSTREAM = 10000 [(name) = "gulfstream", (bit) = 47];

  // Free bits:
  // 16, 17, 18, 19
  // 20, 25, 26, 27, 28
  // 33, 34, 35
  // 40, 41, 42, 43, 44, 45, 46, 48
  // 50, 51
  // 68

  // next bit: 73
}
