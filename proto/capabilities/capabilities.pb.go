// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: capabilities.proto

package capabilities

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Capability is an enumeration of the Chainguard IAM capabilities.
type Capability int32

const (
	Capability_UNKNOWN                               Capability = 0
	Capability_CAP_IAM_GROUPS_CREATE                 Capability = 101
	Capability_CAP_IAM_GROUPS_UPDATE                 Capability = 102
	Capability_CAP_IAM_GROUPS_LIST                   Capability = 103
	Capability_CAP_IAM_GROUPS_DELETE                 Capability = 104
	Capability_CAP_IAM_GROUP_INVITES_CREATE          Capability = 201
	Capability_CAP_IAM_GROUP_INVITES_LIST            Capability = 203
	Capability_CAP_IAM_GROUP_INVITES_DELETE          Capability = 204
	Capability_CAP_IAM_ROLES_CREATE                  Capability = 301
	Capability_CAP_IAM_ROLES_UPDATE                  Capability = 302
	Capability_CAP_IAM_ROLES_LIST                    Capability = 303
	Capability_CAP_IAM_ROLES_DELETE                  Capability = 304
	Capability_CAP_IAM_ROLE_BINDINGS_CREATE          Capability = 401
	Capability_CAP_IAM_ROLE_BINDINGS_UPDATE          Capability = 402
	Capability_CAP_IAM_ROLE_BINDINGS_LIST            Capability = 403
	Capability_CAP_IAM_ROLE_BINDINGS_DELETE          Capability = 404
	Capability_CAP_TENANT_CLUSTERS_CREATE            Capability = 501
	Capability_CAP_TENANT_CLUSTERS_UPDATE            Capability = 502
	Capability_CAP_TENANT_CLUSTERS_LIST              Capability = 503
	Capability_CAP_TENANT_CLUSTERS_DELETE            Capability = 504
	Capability_CAP_TENANT_CLUSTERS_DISCOVER          Capability = 505
	Capability_CAP_TENANT_RECORDS_LIST               Capability = 603
	Capability_CAP_TENANT_RECORD_CONTEXTS_LIST       Capability = 613
	Capability_CAP_TENANT_RECORD_SIGNATURES_LIST     Capability = 623
	Capability_CAP_TENANT_RECORD_POLICY_RESULTS_LIST Capability = 633
	Capability_CAP_TENANT_RISKS_LIST                 Capability = 640
	Capability_CAP_TENANT_SBOMS_LIST                 Capability = 650
	Capability_CAP_TENANT_VULN_REPORTS_LIST          Capability = 660
	Capability_CAP_TENANT_ATTESTATIONS_LIST          Capability = 670
	Capability_CAP_IAM_ACCOUNT_ASSOCIATIONS_CREATE   Capability = 701
	Capability_CAP_IAM_ACCOUNT_ASSOCIATIONS_UPDATE   Capability = 702
	Capability_CAP_IAM_ACCOUNT_ASSOCIATIONS_LIST     Capability = 703
	Capability_CAP_IAM_ACCOUNT_ASSOCIATIONS_DELETE   Capability = 704
	Capability_CAP_IAM_POLICY_CREATE                 Capability = 801
	Capability_CAP_IAM_POLICY_UPDATE                 Capability = 802
	Capability_CAP_IAM_POLICY_LIST                   Capability = 803
	Capability_CAP_IAM_POLICY_DELETE                 Capability = 804
	Capability_CAP_IAM_IDENTITY_CREATE               Capability = 901
	Capability_CAP_IAM_IDENTITY_UPDATE               Capability = 902
	Capability_CAP_IAM_IDENTITY_LIST                 Capability = 903
	Capability_CAP_IAM_IDENTITY_DELETE               Capability = 904
	Capability_CAP_TENANT_NODES_LIST                 Capability = 1003
	Capability_CAP_TENANT_NAMESPACES_LIST            Capability = 1103
	Capability_CAP_TENANT_WORKLOADS_LIST             Capability = 1203
	Capability_CAP_IAM_IDENTITY_PROVIDERS_CREATE     Capability = 1301
	Capability_CAP_IAM_IDENTITY_PROVIDERS_UPDATE     Capability = 1302
	Capability_CAP_IAM_IDENTITY_PROVIDERS_LIST       Capability = 1303
	Capability_CAP_IAM_IDENTITY_PROVIDERS_DELETE     Capability = 1304
	Capability_CAP_EVENTS_SUBSCRIPTION_CREATE        Capability = 1501
	Capability_CAP_EVENTS_SUBSCRIPTION_UPDATE        Capability = 1502
	Capability_CAP_EVENTS_SUBSCRIPTION_LIST          Capability = 1503
	Capability_CAP_EVENTS_SUBSCRIPTION_DELETE        Capability = 1504
	// TODO(jason): Remove these coarse-grained capabilities after they're removed from the roles.
	Capability_CAP_REGISTRY_PULL               Capability = 1601 // Can read tags, blobs, manifests.
	Capability_CAP_REGISTRY_PUSH               Capability = 1602 // Can create and update tags, blobs, manifests.
	Capability_CAP_REPO_CREATE                 Capability = 1603
	Capability_CAP_REPO_UPDATE                 Capability = 1604
	Capability_CAP_REPO_LIST                   Capability = 1605
	Capability_CAP_REPO_DELETE                 Capability = 1606
	Capability_CAP_MANIFEST_CREATE             Capability = 1607
	Capability_CAP_MANIFEST_UPDATE             Capability = 1608
	Capability_CAP_MANIFEST_LIST               Capability = 1609
	Capability_CAP_MANIFEST_DELETE             Capability = 1610
	Capability_CAP_TAG_CREATE                  Capability = 1611
	Capability_CAP_TAG_UPDATE                  Capability = 1612
	Capability_CAP_TAG_LIST                    Capability = 1613
	Capability_CAP_TAG_DELETE                  Capability = 1614
	Capability_CAP_SIGSTORE_CREATE             Capability = 1701
	Capability_CAP_SIGSTORE_UPDATE             Capability = 1702
	Capability_CAP_SIGSTORE_LIST               Capability = 1703
	Capability_CAP_SIGSTORE_DELETE             Capability = 1704
	Capability_CAP_SIGSTORE_CERTIFICATE_CREATE Capability = 1705
	// This is orthogonal enough that we should leave
	// it somewhat separate, so add new capabilities above.
	// TODO(mattmoor): Think about whether we can encode specific
	// controller capabilities into our access control here?
	// e.g. could each logical controller/webhook be its own
	// capability?
	Capability_CAP_GULFSTREAM Capability = 10000
)

// Enum value maps for Capability.
var (
	Capability_name = map[int32]string{
		0:     "UNKNOWN",
		101:   "CAP_IAM_GROUPS_CREATE",
		102:   "CAP_IAM_GROUPS_UPDATE",
		103:   "CAP_IAM_GROUPS_LIST",
		104:   "CAP_IAM_GROUPS_DELETE",
		201:   "CAP_IAM_GROUP_INVITES_CREATE",
		203:   "CAP_IAM_GROUP_INVITES_LIST",
		204:   "CAP_IAM_GROUP_INVITES_DELETE",
		301:   "CAP_IAM_ROLES_CREATE",
		302:   "CAP_IAM_ROLES_UPDATE",
		303:   "CAP_IAM_ROLES_LIST",
		304:   "CAP_IAM_ROLES_DELETE",
		401:   "CAP_IAM_ROLE_BINDINGS_CREATE",
		402:   "CAP_IAM_ROLE_BINDINGS_UPDATE",
		403:   "CAP_IAM_ROLE_BINDINGS_LIST",
		404:   "CAP_IAM_ROLE_BINDINGS_DELETE",
		501:   "CAP_TENANT_CLUSTERS_CREATE",
		502:   "CAP_TENANT_CLUSTERS_UPDATE",
		503:   "CAP_TENANT_CLUSTERS_LIST",
		504:   "CAP_TENANT_CLUSTERS_DELETE",
		505:   "CAP_TENANT_CLUSTERS_DISCOVER",
		603:   "CAP_TENANT_RECORDS_LIST",
		613:   "CAP_TENANT_RECORD_CONTEXTS_LIST",
		623:   "CAP_TENANT_RECORD_SIGNATURES_LIST",
		633:   "CAP_TENANT_RECORD_POLICY_RESULTS_LIST",
		640:   "CAP_TENANT_RISKS_LIST",
		650:   "CAP_TENANT_SBOMS_LIST",
		660:   "CAP_TENANT_VULN_REPORTS_LIST",
		670:   "CAP_TENANT_ATTESTATIONS_LIST",
		701:   "CAP_IAM_ACCOUNT_ASSOCIATIONS_CREATE",
		702:   "CAP_IAM_ACCOUNT_ASSOCIATIONS_UPDATE",
		703:   "CAP_IAM_ACCOUNT_ASSOCIATIONS_LIST",
		704:   "CAP_IAM_ACCOUNT_ASSOCIATIONS_DELETE",
		801:   "CAP_IAM_POLICY_CREATE",
		802:   "CAP_IAM_POLICY_UPDATE",
		803:   "CAP_IAM_POLICY_LIST",
		804:   "CAP_IAM_POLICY_DELETE",
		901:   "CAP_IAM_IDENTITY_CREATE",
		902:   "CAP_IAM_IDENTITY_UPDATE",
		903:   "CAP_IAM_IDENTITY_LIST",
		904:   "CAP_IAM_IDENTITY_DELETE",
		1003:  "CAP_TENANT_NODES_LIST",
		1103:  "CAP_TENANT_NAMESPACES_LIST",
		1203:  "CAP_TENANT_WORKLOADS_LIST",
		1301:  "CAP_IAM_IDENTITY_PROVIDERS_CREATE",
		1302:  "CAP_IAM_IDENTITY_PROVIDERS_UPDATE",
		1303:  "CAP_IAM_IDENTITY_PROVIDERS_LIST",
		1304:  "CAP_IAM_IDENTITY_PROVIDERS_DELETE",
		1501:  "CAP_EVENTS_SUBSCRIPTION_CREATE",
		1502:  "CAP_EVENTS_SUBSCRIPTION_UPDATE",
		1503:  "CAP_EVENTS_SUBSCRIPTION_LIST",
		1504:  "CAP_EVENTS_SUBSCRIPTION_DELETE",
		1601:  "CAP_REGISTRY_PULL",
		1602:  "CAP_REGISTRY_PUSH",
		1603:  "CAP_REPO_CREATE",
		1604:  "CAP_REPO_UPDATE",
		1605:  "CAP_REPO_LIST",
		1606:  "CAP_REPO_DELETE",
		1607:  "CAP_MANIFEST_CREATE",
		1608:  "CAP_MANIFEST_UPDATE",
		1609:  "CAP_MANIFEST_LIST",
		1610:  "CAP_MANIFEST_DELETE",
		1611:  "CAP_TAG_CREATE",
		1612:  "CAP_TAG_UPDATE",
		1613:  "CAP_TAG_LIST",
		1614:  "CAP_TAG_DELETE",
		1701:  "CAP_SIGSTORE_CREATE",
		1702:  "CAP_SIGSTORE_UPDATE",
		1703:  "CAP_SIGSTORE_LIST",
		1704:  "CAP_SIGSTORE_DELETE",
		1705:  "CAP_SIGSTORE_CERTIFICATE_CREATE",
		10000: "CAP_GULFSTREAM",
	}
	Capability_value = map[string]int32{
		"UNKNOWN":                               0,
		"CAP_IAM_GROUPS_CREATE":                 101,
		"CAP_IAM_GROUPS_UPDATE":                 102,
		"CAP_IAM_GROUPS_LIST":                   103,
		"CAP_IAM_GROUPS_DELETE":                 104,
		"CAP_IAM_GROUP_INVITES_CREATE":          201,
		"CAP_IAM_GROUP_INVITES_LIST":            203,
		"CAP_IAM_GROUP_INVITES_DELETE":          204,
		"CAP_IAM_ROLES_CREATE":                  301,
		"CAP_IAM_ROLES_UPDATE":                  302,
		"CAP_IAM_ROLES_LIST":                    303,
		"CAP_IAM_ROLES_DELETE":                  304,
		"CAP_IAM_ROLE_BINDINGS_CREATE":          401,
		"CAP_IAM_ROLE_BINDINGS_UPDATE":          402,
		"CAP_IAM_ROLE_BINDINGS_LIST":            403,
		"CAP_IAM_ROLE_BINDINGS_DELETE":          404,
		"CAP_TENANT_CLUSTERS_CREATE":            501,
		"CAP_TENANT_CLUSTERS_UPDATE":            502,
		"CAP_TENANT_CLUSTERS_LIST":              503,
		"CAP_TENANT_CLUSTERS_DELETE":            504,
		"CAP_TENANT_CLUSTERS_DISCOVER":          505,
		"CAP_TENANT_RECORDS_LIST":               603,
		"CAP_TENANT_RECORD_CONTEXTS_LIST":       613,
		"CAP_TENANT_RECORD_SIGNATURES_LIST":     623,
		"CAP_TENANT_RECORD_POLICY_RESULTS_LIST": 633,
		"CAP_TENANT_RISKS_LIST":                 640,
		"CAP_TENANT_SBOMS_LIST":                 650,
		"CAP_TENANT_VULN_REPORTS_LIST":          660,
		"CAP_TENANT_ATTESTATIONS_LIST":          670,
		"CAP_IAM_ACCOUNT_ASSOCIATIONS_CREATE":   701,
		"CAP_IAM_ACCOUNT_ASSOCIATIONS_UPDATE":   702,
		"CAP_IAM_ACCOUNT_ASSOCIATIONS_LIST":     703,
		"CAP_IAM_ACCOUNT_ASSOCIATIONS_DELETE":   704,
		"CAP_IAM_POLICY_CREATE":                 801,
		"CAP_IAM_POLICY_UPDATE":                 802,
		"CAP_IAM_POLICY_LIST":                   803,
		"CAP_IAM_POLICY_DELETE":                 804,
		"CAP_IAM_IDENTITY_CREATE":               901,
		"CAP_IAM_IDENTITY_UPDATE":               902,
		"CAP_IAM_IDENTITY_LIST":                 903,
		"CAP_IAM_IDENTITY_DELETE":               904,
		"CAP_TENANT_NODES_LIST":                 1003,
		"CAP_TENANT_NAMESPACES_LIST":            1103,
		"CAP_TENANT_WORKLOADS_LIST":             1203,
		"CAP_IAM_IDENTITY_PROVIDERS_CREATE":     1301,
		"CAP_IAM_IDENTITY_PROVIDERS_UPDATE":     1302,
		"CAP_IAM_IDENTITY_PROVIDERS_LIST":       1303,
		"CAP_IAM_IDENTITY_PROVIDERS_DELETE":     1304,
		"CAP_EVENTS_SUBSCRIPTION_CREATE":        1501,
		"CAP_EVENTS_SUBSCRIPTION_UPDATE":        1502,
		"CAP_EVENTS_SUBSCRIPTION_LIST":          1503,
		"CAP_EVENTS_SUBSCRIPTION_DELETE":        1504,
		"CAP_REGISTRY_PULL":                     1601,
		"CAP_REGISTRY_PUSH":                     1602,
		"CAP_REPO_CREATE":                       1603,
		"CAP_REPO_UPDATE":                       1604,
		"CAP_REPO_LIST":                         1605,
		"CAP_REPO_DELETE":                       1606,
		"CAP_MANIFEST_CREATE":                   1607,
		"CAP_MANIFEST_UPDATE":                   1608,
		"CAP_MANIFEST_LIST":                     1609,
		"CAP_MANIFEST_DELETE":                   1610,
		"CAP_TAG_CREATE":                        1611,
		"CAP_TAG_UPDATE":                        1612,
		"CAP_TAG_LIST":                          1613,
		"CAP_TAG_DELETE":                        1614,
		"CAP_SIGSTORE_CREATE":                   1701,
		"CAP_SIGSTORE_UPDATE":                   1702,
		"CAP_SIGSTORE_LIST":                     1703,
		"CAP_SIGSTORE_DELETE":                   1704,
		"CAP_SIGSTORE_CERTIFICATE_CREATE":       1705,
		"CAP_GULFSTREAM":                        10000,
	}
)

func (x Capability) Enum() *Capability {
	p := new(Capability)
	*p = x
	return p
}

func (x Capability) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Capability) Descriptor() protoreflect.EnumDescriptor {
	return file_capabilities_proto_enumTypes[0].Descriptor()
}

func (Capability) Type() protoreflect.EnumType {
	return &file_capabilities_proto_enumTypes[0]
}

func (x Capability) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Capability.Descriptor instead.
func (Capability) EnumDescriptor() ([]byte, []int) {
	return file_capabilities_proto_rawDescGZIP(), []int{0}
}

var file_capabilities_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         189350643,
		Name:          "chainguard.capabilities.name",
		Tag:           "bytes,189350643,opt,name=name",
		Filename:      "capabilities.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*uint32)(nil),
		Field:         20221109,
		Name:          "chainguard.capabilities.bit",
		Tag:           "varint,20221109,opt,name=bit",
		Filename:      "capabilities.proto",
	},
}

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// This decorates our capability enumeration values with
	// the friendly name to show to humans.
	//
	// optional string name = 189350643;
	E_Name = &file_capabilities_proto_extTypes[0]
	// This decorates our capability enumeration values with
	// a bit index enabling compacted encodings.
	//
	// optional uint32 bit = 20221109;
	E_Bit = &file_capabilities_proto_extTypes[1]
)

var File_capabilities_proto protoreflect.FileDescriptor

var file_capabilities_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64,
	0x2e, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x20, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a,
	0x93, 0x21, 0x0a, 0x0a, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x33, 0x0a, 0x15, 0x43,
	0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x53, 0x5f, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x10, 0x65, 0x1a, 0x18, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0d, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x01,
	0x12, 0x33, 0x0a, 0x15, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x47, 0x52, 0x4f, 0x55,
	0x50, 0x53, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x66, 0x1a, 0x18, 0x9a, 0xaf, 0xa8,
	0xd2, 0x05, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0xa8, 0xcb, 0x91, 0x4d, 0x02, 0x12, 0x2f, 0x0a, 0x13, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d,
	0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x67, 0x1a, 0x16,
	0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x6c, 0x69, 0x73,
	0x74, 0xa8, 0xcb, 0x91, 0x4d, 0x03, 0x12, 0x33, 0x0a, 0x15, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41,
	0x4d, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10,
	0x68, 0x1a, 0x18, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x04, 0x12, 0x42, 0x0a, 0x1c, 0x43,
	0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x49, 0x4e, 0x56,
	0x49, 0x54, 0x45, 0x53, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0xc9, 0x01, 0x1a, 0x1f,
	0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x14, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x73, 0x2e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x05, 0x12,
	0x3e, 0x0a, 0x1a, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0xcb, 0x01,
	0x1a, 0x1d, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x73, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0xa8, 0xcb, 0x91, 0x4d, 0x06, 0x12,
	0x42, 0x0a, 0x1c, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10,
	0xcc, 0x01, 0x1a, 0x1f, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x14, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0xa8, 0xcb,
	0x91, 0x4d, 0x07, 0x12, 0x32, 0x0a, 0x14, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x52,
	0x4f, 0x4c, 0x45, 0x53, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0xad, 0x02, 0x1a, 0x17,
	0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0c, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x08, 0x12, 0x32, 0x0a, 0x14, 0x43, 0x41, 0x50, 0x5f, 0x49,
	0x41, 0x4d, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x53, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10,
	0xae, 0x02, 0x1a, 0x17, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0c, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x2e,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x09, 0x12, 0x2e, 0x0a, 0x12, 0x43,
	0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x53, 0x5f, 0x4c, 0x49, 0x53,
	0x54, 0x10, 0xaf, 0x02, 0x1a, 0x15, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0a, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0xa8, 0xcb, 0x91, 0x4d, 0x0a, 0x12, 0x32, 0x0a, 0x14, 0x43,
	0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x53, 0x5f, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x10, 0xb0, 0x02, 0x1a, 0x17, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0c, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x0b, 0x12,
	0x42, 0x0a, 0x1c, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f,
	0x42, 0x49, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x53, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10,
	0x91, 0x03, 0x1a, 0x1f, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x14, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x62,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0xa8, 0xcb,
	0x91, 0x4d, 0x0c, 0x12, 0x42, 0x0a, 0x1c, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x52,
	0x4f, 0x4c, 0x45, 0x5f, 0x42, 0x49, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x53, 0x5f, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x10, 0x92, 0x03, 0x1a, 0x1f, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x14, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x0d, 0x12, 0x3e, 0x0a, 0x1a, 0x43, 0x41, 0x50, 0x5f, 0x49,
	0x41, 0x4d, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x42, 0x49, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x53,
	0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x93, 0x03, 0x1a, 0x1d, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x12,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0xa8, 0xcb, 0x91, 0x4d, 0x0e, 0x12, 0x42, 0x0a, 0x1c, 0x43, 0x41, 0x50, 0x5f, 0x49,
	0x41, 0x4d, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x42, 0x49, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x53,
	0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x94, 0x03, 0x1a, 0x1f, 0x9a, 0xaf, 0xa8, 0xd2,
	0x05, 0x14, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x0f, 0x12, 0x3b, 0x0a, 0x1a, 0x43,
	0x41, 0x50, 0x5f, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45,
	0x52, 0x53, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0xf5, 0x03, 0x1a, 0x1a, 0x9a, 0xaf,
	0xa8, 0xd2, 0x05, 0x0f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x10, 0x12, 0x3b, 0x0a, 0x1a, 0x43, 0x41, 0x50, 0x5f,
	0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x53, 0x5f,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0xf6, 0x03, 0x1a, 0x1a, 0x9a, 0xaf, 0xa8, 0xd2, 0x05,
	0x0f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0xa8, 0xcb, 0x91, 0x4d, 0x11, 0x12, 0x37, 0x0a, 0x18, 0x43, 0x41, 0x50, 0x5f, 0x54, 0x45, 0x4e,
	0x41, 0x4e, 0x54, 0x5f, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x53, 0x5f, 0x4c, 0x49, 0x53,
	0x54, 0x10, 0xf7, 0x03, 0x1a, 0x18, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0d, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0xa8, 0xcb, 0x91, 0x4d, 0x12, 0x12, 0x3b,
	0x0a, 0x1a, 0x43, 0x41, 0x50, 0x5f, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x43, 0x4c, 0x55,
	0x53, 0x54, 0x45, 0x52, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0xf8, 0x03, 0x1a,
	0x1a, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x13, 0x12, 0x3f, 0x0a, 0x1c, 0x43,
	0x41, 0x50, 0x5f, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45,
	0x52, 0x53, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x10, 0xf9, 0x03, 0x1a, 0x1c,
	0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x11, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0xa8, 0xcb, 0x91, 0x4d, 0x33, 0x12, 0x35, 0x0a, 0x17,
	0x43, 0x41, 0x50, 0x5f, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52,
	0x44, 0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0xdb, 0x04, 0x1a, 0x17, 0x9a, 0xaf, 0xa8, 0xd2,
	0x05, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0xa8, 0xcb,
	0x91, 0x4d, 0x14, 0x12, 0x45, 0x0a, 0x1f, 0x43, 0x41, 0x50, 0x5f, 0x54, 0x45, 0x4e, 0x41, 0x4e,
	0x54, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x58, 0x54,
	0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0xe5, 0x04, 0x1a, 0x1f, 0x9a, 0xaf, 0xa8, 0xd2, 0x05,
	0x14, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73,
	0x2e, 0x6c, 0x69, 0x73, 0x74, 0xa8, 0xcb, 0x91, 0x4d, 0x30, 0x12, 0x49, 0x0a, 0x21, 0x43, 0x41,
	0x50, 0x5f, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f,
	0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10,
	0xef, 0x04, 0x1a, 0x21, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x16, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x6c, 0x69, 0x73, 0x74,
	0xa8, 0xcb, 0x91, 0x4d, 0x31, 0x12, 0x51, 0x0a, 0x25, 0x43, 0x41, 0x50, 0x5f, 0x54, 0x45, 0x4e,
	0x41, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43,
	0x59, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0xf9,
	0x04, 0x1a, 0x25, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x1a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x2e, 0x6c,
	0x69, 0x73, 0x74, 0xa8, 0xcb, 0x91, 0x4d, 0x32, 0x12, 0x31, 0x0a, 0x15, 0x43, 0x41, 0x50, 0x5f,
	0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x52, 0x49, 0x53, 0x4b, 0x53, 0x5f, 0x4c, 0x49, 0x53,
	0x54, 0x10, 0x80, 0x05, 0x1a, 0x15, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0a, 0x72, 0x69, 0x73, 0x6b,
	0x73, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0xa8, 0xcb, 0x91, 0x4d, 0x44, 0x12, 0x31, 0x0a, 0x15, 0x43,
	0x41, 0x50, 0x5f, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x53, 0x42, 0x4f, 0x4d, 0x53, 0x5f,
	0x4c, 0x49, 0x53, 0x54, 0x10, 0x8a, 0x05, 0x1a, 0x15, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0a, 0x73,
	0x62, 0x6f, 0x6d, 0x73, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0xa8, 0xcb, 0x91, 0x4d, 0x45, 0x12, 0x3f,
	0x0a, 0x1c, 0x43, 0x41, 0x50, 0x5f, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x56, 0x55, 0x4c,
	0x4e, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x94,
	0x05, 0x1a, 0x1c, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x11, 0x76, 0x75, 0x6c, 0x6e, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0xa8, 0xcb, 0x91, 0x4d, 0x46, 0x12,
	0x3f, 0x0a, 0x1c, 0x43, 0x41, 0x50, 0x5f, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x41, 0x54,
	0x54, 0x45, 0x53, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10,
	0x9e, 0x05, 0x1a, 0x1c, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x11, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0xa8, 0xcb, 0x91, 0x4d, 0x47,
	0x12, 0x50, 0x0a, 0x23, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x41, 0x43, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x5f, 0x41, 0x53, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53,
	0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0xbd, 0x05, 0x1a, 0x26, 0x9a, 0xaf, 0xa8, 0xd2,
	0x05, 0x1b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0xa8, 0xcb, 0x91,
	0x4d, 0x15, 0x12, 0x50, 0x0a, 0x23, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x41, 0x43,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x41, 0x53, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x53, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0xbe, 0x05, 0x1a, 0x26, 0x9a, 0xaf,
	0xa8, 0xd2, 0x05, 0x1b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0xa8,
	0xcb, 0x91, 0x4d, 0x16, 0x12, 0x4c, 0x0a, 0x21, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x41, 0x53, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0xbf, 0x05, 0x1a, 0x24, 0x9a, 0xaf,
	0xa8, 0xd2, 0x05, 0x19, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0xa8, 0xcb, 0x91,
	0x4d, 0x17, 0x12, 0x50, 0x0a, 0x23, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x41, 0x43,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x41, 0x53, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0xc0, 0x05, 0x1a, 0x26, 0x9a, 0xaf,
	0xa8, 0xd2, 0x05, 0x1b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0xa8,
	0xcb, 0x91, 0x4d, 0x18, 0x12, 0x34, 0x0a, 0x15, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f,
	0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0xa1, 0x06,
	0x1a, 0x18, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x19, 0x12, 0x34, 0x0a, 0x15, 0x43, 0x41,
	0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x10, 0xa2, 0x06, 0x1a, 0x18, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0d, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x1a,
	0x12, 0x30, 0x0a, 0x13, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x50, 0x4f, 0x4c, 0x49,
	0x43, 0x59, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0xa3, 0x06, 0x1a, 0x16, 0x9a, 0xaf, 0xa8, 0xd2,
	0x05, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0xa8, 0xcb, 0x91,
	0x4d, 0x1b, 0x12, 0x34, 0x0a, 0x15, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x50, 0x4f,
	0x4c, 0x49, 0x43, 0x59, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0xa4, 0x06, 0x1a, 0x18,
	0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x1c, 0x12, 0x38, 0x0a, 0x17, 0x43, 0x41, 0x50, 0x5f,
	0x49, 0x41, 0x4d, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x10, 0x85, 0x07, 0x1a, 0x1a, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0xa8, 0xcb, 0x91,
	0x4d, 0x1d, 0x12, 0x38, 0x0a, 0x17, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x49, 0x44,
	0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x86, 0x07,
	0x1a, 0x1a, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x1e, 0x12, 0x34, 0x0a, 0x15,
	0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59,
	0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x87, 0x07, 0x1a, 0x18, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0d,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0xa8, 0xcb, 0x91,
	0x4d, 0x1f, 0x12, 0x38, 0x0a, 0x17, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x49, 0x44,
	0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x88, 0x07,
	0x1a, 0x1a, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x20, 0x12, 0x31, 0x0a, 0x15,
	0x43, 0x41, 0x50, 0x5f, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x53,
	0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0xeb, 0x07, 0x1a, 0x15, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0a,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0xa8, 0xcb, 0x91, 0x4d, 0x21, 0x12,
	0x3b, 0x0a, 0x1a, 0x43, 0x41, 0x50, 0x5f, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x4e, 0x41,
	0x4d, 0x45, 0x53, 0x50, 0x41, 0x43, 0x45, 0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0xcf, 0x08,
	0x1a, 0x1a, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0xa8, 0xcb, 0x91, 0x4d, 0x22, 0x12, 0x39, 0x0a, 0x19,
	0x43, 0x41, 0x50, 0x5f, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x4c,
	0x4f, 0x41, 0x44, 0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0xb3, 0x09, 0x1a, 0x19, 0x9a, 0xaf,
	0xa8, 0xd2, 0x05, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0xa8, 0xcb, 0x91, 0x4d, 0x23, 0x12, 0x4c, 0x0a, 0x21, 0x43, 0x41, 0x50, 0x5f, 0x49,
	0x41, 0x4d, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x56,
	0x49, 0x44, 0x45, 0x52, 0x53, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x95, 0x0a, 0x1a,
	0x24, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x19, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0xa8, 0xcb, 0x91, 0x4d, 0x34, 0x12, 0x4c, 0x0a, 0x21, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d,
	0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44,
	0x45, 0x52, 0x53, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x96, 0x0a, 0x1a, 0x24, 0x9a,
	0xaf, 0xa8, 0xd2, 0x05, 0x19, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0xa8, 0xcb,
	0x91, 0x4d, 0x35, 0x12, 0x48, 0x0a, 0x1f, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x49,
	0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52,
	0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x97, 0x0a, 0x1a, 0x22, 0x9a, 0xaf, 0xa8, 0xd2, 0x05,
	0x17, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0xa8, 0xcb, 0x91, 0x4d, 0x36, 0x12, 0x4c, 0x0a,
	0x21, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x41, 0x4d, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54,
	0x59, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x10, 0x98, 0x0a, 0x1a, 0x24, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x19, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x37, 0x12, 0x44, 0x0a, 0x1e, 0x43,
	0x41, 0x50, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52,
	0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0xdd, 0x0b,
	0x1a, 0x1f, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x14, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d,
	0x24, 0x12, 0x44, 0x0a, 0x1e, 0x43, 0x41, 0x50, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x53, 0x5f,
	0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x10, 0xde, 0x0b, 0x1a, 0x1f, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x14, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x25, 0x12, 0x40, 0x0a, 0x1c, 0x43, 0x41, 0x50, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0xdf, 0x0b, 0x1a, 0x1d, 0x9a, 0xaf, 0xa8, 0xd2,
	0x05, 0x12, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x6c, 0x69, 0x73, 0x74, 0xa8, 0xcb, 0x91, 0x4d, 0x26, 0x12, 0x44, 0x0a, 0x1e, 0x43, 0x41, 0x50,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0xe0, 0x0b, 0x1a, 0x1f,
	0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x14, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x27, 0x12,
	0x30, 0x0a, 0x11, 0x43, 0x41, 0x50, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f,
	0x50, 0x55, 0x4c, 0x4c, 0x10, 0xc1, 0x0c, 0x1a, 0x18, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0d, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x75, 0x6c, 0x6c, 0xa8, 0xcb, 0x91, 0x4d,
	0x28, 0x12, 0x30, 0x0a, 0x11, 0x43, 0x41, 0x50, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52,
	0x59, 0x5f, 0x50, 0x55, 0x53, 0x48, 0x10, 0xc2, 0x0c, 0x1a, 0x18, 0x9a, 0xaf, 0xa8, 0xd2, 0x05,
	0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x75, 0x73, 0x68, 0xa8, 0xcb,
	0x91, 0x4d, 0x29, 0x12, 0x2c, 0x0a, 0x0f, 0x43, 0x41, 0x50, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0xc3, 0x0c, 0x1a, 0x16, 0x9a, 0xaf, 0xa8, 0xd2, 0x05,
	0x0b, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d,
	0x38, 0x12, 0x2c, 0x0a, 0x0f, 0x43, 0x41, 0x50, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x10, 0xc4, 0x0c, 0x1a, 0x16, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0b, 0x72,
	0x65, 0x70, 0x6f, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x39, 0x12,
	0x28, 0x0a, 0x0d, 0x43, 0x41, 0x50, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x4c, 0x49, 0x53, 0x54,
	0x10, 0xc5, 0x0c, 0x1a, 0x14, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x2e,
	0x6c, 0x69, 0x73, 0x74, 0xa8, 0xcb, 0x91, 0x4d, 0x3a, 0x12, 0x2c, 0x0a, 0x0f, 0x43, 0x41, 0x50,
	0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0xc6, 0x0c, 0x1a,
	0x16, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x3b, 0x12, 0x34, 0x0a, 0x13, 0x43, 0x41, 0x50, 0x5f, 0x4d,
	0x41, 0x4e, 0x49, 0x46, 0x45, 0x53, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0xc7,
	0x0c, 0x1a, 0x1a, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x2e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x3c, 0x12, 0x34, 0x0a,
	0x13, 0x43, 0x41, 0x50, 0x5f, 0x4d, 0x41, 0x4e, 0x49, 0x46, 0x45, 0x53, 0x54, 0x5f, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x10, 0xc8, 0x0c, 0x1a, 0x1a, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0f, 0x6d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0xa8, 0xcb,
	0x91, 0x4d, 0x3d, 0x12, 0x30, 0x0a, 0x11, 0x43, 0x41, 0x50, 0x5f, 0x4d, 0x41, 0x4e, 0x49, 0x46,
	0x45, 0x53, 0x54, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0xc9, 0x0c, 0x1a, 0x18, 0x9a, 0xaf, 0xa8,
	0xd2, 0x05, 0x0d, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x6c, 0x69, 0x73, 0x74,
	0xa8, 0xcb, 0x91, 0x4d, 0x3e, 0x12, 0x34, 0x0a, 0x13, 0x43, 0x41, 0x50, 0x5f, 0x4d, 0x41, 0x4e,
	0x49, 0x46, 0x45, 0x53, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0xca, 0x0c, 0x1a,
	0x1a, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x3f, 0x12, 0x2a, 0x0a, 0x0e, 0x43,
	0x41, 0x50, 0x5f, 0x54, 0x41, 0x47, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0xcb, 0x0c,
	0x1a, 0x15, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0a, 0x74, 0x61, 0x67, 0x2e, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x40, 0x12, 0x2a, 0x0a, 0x0e, 0x43, 0x41, 0x50, 0x5f, 0x54,
	0x41, 0x47, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0xcc, 0x0c, 0x1a, 0x15, 0x9a, 0xaf,
	0xa8, 0xd2, 0x05, 0x0a, 0x74, 0x61, 0x67, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0xa8, 0xcb,
	0x91, 0x4d, 0x41, 0x12, 0x26, 0x0a, 0x0c, 0x43, 0x41, 0x50, 0x5f, 0x54, 0x41, 0x47, 0x5f, 0x4c,
	0x49, 0x53, 0x54, 0x10, 0xcd, 0x0c, 0x1a, 0x13, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x08, 0x74, 0x61,
	0x67, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0xa8, 0xcb, 0x91, 0x4d, 0x42, 0x12, 0x2a, 0x0a, 0x0e, 0x43,
	0x41, 0x50, 0x5f, 0x54, 0x41, 0x47, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0xce, 0x0c,
	0x1a, 0x15, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0a, 0x74, 0x61, 0x67, 0x2e, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x43, 0x12, 0x34, 0x0a, 0x13, 0x43, 0x41, 0x50, 0x5f, 0x53,
	0x49, 0x47, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0xa5,
	0x0d, 0x1a, 0x1a, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0f, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x2a, 0x12, 0x34, 0x0a,
	0x13, 0x43, 0x41, 0x50, 0x5f, 0x53, 0x49, 0x47, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x10, 0xa6, 0x0d, 0x1a, 0x1a, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0f, 0x73,
	0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0xa8, 0xcb,
	0x91, 0x4d, 0x2b, 0x12, 0x30, 0x0a, 0x11, 0x43, 0x41, 0x50, 0x5f, 0x53, 0x49, 0x47, 0x53, 0x54,
	0x4f, 0x52, 0x45, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0xa7, 0x0d, 0x1a, 0x18, 0x9a, 0xaf, 0xa8,
	0xd2, 0x05, 0x0d, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6c, 0x69, 0x73, 0x74,
	0xa8, 0xcb, 0x91, 0x4d, 0x2c, 0x12, 0x34, 0x0a, 0x13, 0x43, 0x41, 0x50, 0x5f, 0x53, 0x49, 0x47,
	0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0xa8, 0x0d, 0x1a,
	0x1a, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0f, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x2d, 0x12, 0x4c, 0x0a, 0x1f, 0x43,
	0x41, 0x50, 0x5f, 0x53, 0x49, 0x47, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x43, 0x45, 0x52, 0x54,
	0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0xa9,
	0x0d, 0x1a, 0x26, 0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x1b, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0xa8, 0xcb, 0x91, 0x4d, 0x2e, 0x12, 0x2a, 0x0a, 0x0e, 0x43, 0x41, 0x50,
	0x5f, 0x47, 0x55, 0x4c, 0x46, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x10, 0x90, 0x4e, 0x1a, 0x15,
	0x9a, 0xaf, 0xa8, 0xd2, 0x05, 0x0a, 0x67, 0x75, 0x6c, 0x66, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0xa8, 0xcb, 0x91, 0x4d, 0x2f, 0x3a, 0x38, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xf3, 0x85, 0xa5, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x3a,
	0x36, 0x0a, 0x03, 0x62, 0x69, 0x74, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb5, 0x99, 0xd2, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x62, 0x69, 0x74, 0x42, 0x5d, 0x0a, 0x1f, 0x64, 0x65, 0x76, 0x2e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x63, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x11, 0x43, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x25, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x64, 0x65, 0x76, 0x2f,
	0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_capabilities_proto_rawDescOnce sync.Once
	file_capabilities_proto_rawDescData = file_capabilities_proto_rawDesc
)

func file_capabilities_proto_rawDescGZIP() []byte {
	file_capabilities_proto_rawDescOnce.Do(func() {
		file_capabilities_proto_rawDescData = protoimpl.X.CompressGZIP(file_capabilities_proto_rawDescData)
	})
	return file_capabilities_proto_rawDescData
}

var file_capabilities_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_capabilities_proto_goTypes = []interface{}{
	(Capability)(0),                       // 0: chainguard.capabilities.Capability
	(*descriptorpb.EnumValueOptions)(nil), // 1: google.protobuf.EnumValueOptions
}
var file_capabilities_proto_depIdxs = []int32{
	1, // 0: chainguard.capabilities.name:extendee -> google.protobuf.EnumValueOptions
	1, // 1: chainguard.capabilities.bit:extendee -> google.protobuf.EnumValueOptions
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	0, // [0:2] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_capabilities_proto_init() }
func file_capabilities_proto_init() {
	if File_capabilities_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_capabilities_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_capabilities_proto_goTypes,
		DependencyIndexes: file_capabilities_proto_depIdxs,
		EnumInfos:         file_capabilities_proto_enumTypes,
		ExtensionInfos:    file_capabilities_proto_extTypes,
	}.Build()
	File_capabilities_proto = out.File
	file_capabilities_proto_rawDesc = nil
	file_capabilities_proto_goTypes = nil
	file_capabilities_proto_depIdxs = nil
}
